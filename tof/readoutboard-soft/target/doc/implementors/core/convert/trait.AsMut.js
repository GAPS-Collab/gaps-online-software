(function() {var implementors = {
"memmap":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"memmap/struct.MmapMut.html\" title=\"struct memmap::MmapMut\">MmapMut</a>"]],
"neli":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"neli/types/struct.Buffer.html\" title=\"struct neli::types::Buffer\">Buffer</a>"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"neli/types/struct.SockBufferRefMut.html\" title=\"struct neli::types::SockBufferRefMut\">SockBufferRefMut</a>&lt;'a&gt;"],["impl&lt;T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"struct\" href=\"neli/genl/struct.Nlattr.html\" title=\"struct neli::genl::Nlattr\">Nlattr</a>&lt;T, P&gt;]&gt; for <a class=\"struct\" href=\"neli/types/struct.GenlBuffer.html\" title=\"struct neli::types::GenlBuffer\">GenlBuffer</a>&lt;T, P&gt;"],["impl&lt;T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"struct\" href=\"neli/rtnl/struct.Rtattr.html\" title=\"struct neli::rtnl::Rtattr\">Rtattr</a>&lt;T, P&gt;]&gt; for <a class=\"struct\" href=\"neli/types/struct.RtBuffer.html\" title=\"struct neli::types::RtBuffer\">RtBuffer</a>&lt;T, P&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()