(function() {var implementors = {
"clap":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.66.0/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt; for <a class=\"struct\" href=\"clap/builder/struct.OsStr.html\" title=\"struct clap::builder::OsStr\">OsStr</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.66.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; for <a class=\"struct\" href=\"clap/builder/struct.OsStr.html\" title=\"struct clap::builder::OsStr\">OsStr</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"clap/builder/struct.Str.html\" title=\"struct clap::builder::Str\">Str</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"clap/builder/struct.Str.html\" title=\"struct clap::builder::Str\">Str</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.66.0/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt; for <a class=\"struct\" href=\"clap/builder/struct.Str.html\" title=\"struct clap::builder::Str\">Str</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.66.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt; for <a class=\"struct\" href=\"clap/builder/struct.Str.html\" title=\"struct clap::builder::Str\">Str</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"clap/struct.Id.html\" title=\"struct clap::Id\">Id</a>"]],
"humantime":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.66.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"humantime/struct.Duration.html\" title=\"struct humantime::Duration\">Duration</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.66.0/std/time/struct.SystemTime.html\" title=\"struct std::time::SystemTime\">SystemTime</a>&gt; for <a class=\"struct\" href=\"humantime/struct.Timestamp.html\" title=\"struct humantime::Timestamp\">Timestamp</a>"]],
"memmap":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"memmap/struct.Mmap.html\" title=\"struct memmap::Mmap\">Mmap</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"memmap/struct.MmapMut.html\" title=\"struct memmap::MmapMut\">MmapMut</a>"]],
"neli":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"neli/types/struct.Buffer.html\" title=\"struct neli::types::Buffer\">Buffer</a>"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"neli/types/struct.SockBufferRef.html\" title=\"struct neli::types::SockBufferRef\">SockBufferRef</a>&lt;'a&gt;"],["impl&lt;T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"struct\" href=\"neli/nl/struct.Nlmsghdr.html\" title=\"struct neli::nl::Nlmsghdr\">Nlmsghdr</a>&lt;T, P&gt;]&gt; for <a class=\"struct\" href=\"neli/types/struct.NlBuffer.html\" title=\"struct neli::types::NlBuffer\">NlBuffer</a>&lt;T, P&gt;"],["impl&lt;T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"struct\" href=\"neli/genl/struct.Nlattr.html\" title=\"struct neli::genl::Nlattr\">Nlattr</a>&lt;T, P&gt;]&gt; for <a class=\"struct\" href=\"neli/types/struct.GenlBuffer.html\" title=\"struct neli::types::GenlBuffer\">GenlBuffer</a>&lt;T, P&gt;"],["impl&lt;T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"struct\" href=\"neli/rtnl/struct.Rtattr.html\" title=\"struct neli::rtnl::Rtattr\">Rtattr</a>&lt;T, P&gt;]&gt; for <a class=\"struct\" href=\"neli/types/struct.RtBuffer.html\" title=\"struct neli::types::RtBuffer\">RtBuffer</a>&lt;T, P&gt;"]],
"os_str_bytes":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"os_str_bytes/struct.RawOsStr.html\" title=\"struct os_str_bytes::RawOsStr\">RawOsStr</a>&gt; for <a class=\"struct\" href=\"os_str_bytes/struct.RawOsStr.html\" title=\"struct os_str_bytes::RawOsStr\">RawOsStr</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"os_str_bytes/struct.RawOsStr.html\" title=\"struct os_str_bytes::RawOsStr\">RawOsStr</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.str.html\">str</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"os_str_bytes/struct.RawOsStr.html\" title=\"struct os_str_bytes::RawOsStr\">RawOsStr</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.66.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"os_str_bytes/struct.RawOsStr.html\" title=\"struct os_str_bytes::RawOsStr\">RawOsStr</a>&gt; for <a class=\"struct\" href=\"os_str_bytes/struct.RawOsString.html\" title=\"struct os_str_bytes::RawOsString\">RawOsString</a>"]],
"regex_syntax":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.66.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.66.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"regex_syntax/hir/literal/struct.Literal.html\" title=\"struct regex_syntax::hir::literal::Literal\">Literal</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()