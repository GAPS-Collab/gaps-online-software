window.SIDEBAR_ITEMS = {"constant":[["ADC_LATENCY",""],["BOARD_ID",""],["BUSY",""],["CNT_DMA_READOUTS_COMPLETED",""],["CNT_EVENT",""],["CNT_LOST_EVENT",""],["CNT_READOUTS_COMPLETED",""],["CNT_RESET",""],["CNT_SEM_CORRECTION","DRS counters"],["CNT_SEM_UNCORRECTABLE",""],["DAQ_RESET",""],["DMA_CLEAR",""],["DMA_POINTER",""],["DMA_RESET",""],["DNA_LSBS","Device DNA (identifier) it is split in 2 32-bit words, since the whole  thing is 64 bit"],["DNA_MSBS",""],["DRS_CONFIGURE",""],["DRS_REINIT",""],["DRS_START",""],["EN_SPIKE_REMOVAL",""],["LOST_TRIGGER_RATE",""],["MT_TRIGGER_MODE","DRS trigger"],["RAM_A_OCCUPANCY",""],["RAM_A_OCC_RST","RAM management - there are two regions in memory, mapped to /dev/uio1 and /dev/uio2 which hold the blob data,  denoted as ram buffers a and b"],["RAM_B_OCCUPANCY",""],["RAM_B_OCC_RST",""],["READOUT_MASK",""],["ROI_MODE","! Registers of the DRS4 are accessed through the sytem ram (Addr8). It is a 32bit system,  so the address format is u32. _ a note here _ : Each register is 32bit. This means for  the Addr8 (8 refers to bits) a register occupies 4 bytes,  so a new register will be the previous register + 4. If the register is the same as another, then the register holds different fields for the different bits in the register."],["SAMPLE_COUNT",""],["TOGGLE_RAM",""],["TRIGGER_RATE",""]]};