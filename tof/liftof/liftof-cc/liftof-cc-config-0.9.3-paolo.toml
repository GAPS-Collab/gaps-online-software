##########################################
# Master configuration file for 
# liftof-cc, HAHALUA edition (>= 0.9.1)
#
##########################################


# location of data stored on the TOF CPU
data_dir              = "/tofdata/run/"
# location to store calibration files on the TOF CPUE
calibration_dir       = "/tofdata/calibration/"
# location of the database
db_path               = "/home/gaps/config/gaps_flight.db"
# default runtime of the program
runtime_sec           = 600 # if u need more time
# number of tofpackets per file before a new file
# gets started
packs_per_file        = 1000 # if it gets too large change (10 GB)
# use this address for UCLA teststand (tailscale)
#fc_pub_address       = "tcp://100.101.96.10:42000"
# flight computer needs to subscribe to this address to 
# recieve tof packets
fc_pub_address        = "tcp://192.168.37.20:42000"
# TOF computer needs to subscribe to this address to 
# recieve commands
fc_sub_address        = "tcp://10.97.108.30:42000"
# Interval of time that will elapse from a cmd check to the other
cmd_listener_interval_sec = 10
# UDP connection to the MTB (does NOT start with tcp://)
mtb_address           = "10.0.1.10:50001"
# Receive MtbMoniData every X secs
mtb_moni_interval_sec = 20
# Query the TOF computer for CPUMoniData every X secs
cpu_moni_interval_sec = 20
# Non existent/broken RBs (in range 1-50)
rb_ignorelist         = [10, 12, 37, 38, 43, 45, 47, 48, 49, 50]
# should TofHits be calculated for RBEvents? [should be true for flight]
run_analysis_engine   = true

[mtb_settings]
# can be either Gaps, Track, Any or Poisson
# set it to "Unknown" if you want to use 
# pico_hal.py to set the trigger conditions
trigger_type          = "Unknown"
# prescale is between 0 and 1
trigger_prescale      = 0.1
poisson_trigger_rate  = 0
gaps_trigger_use_beta = true
trace_suppression     = false
mtb_moni_interval     = 30
mtb_timeout_sec       = 60
rb_int_window         = 1
tiu_emulation_mode    = true

# not supported yet
[event_builder_settings]
cachesize      = 100000
n_mte_per_loop = 1
n_rbe_per_loop = 40
# tof event timeout (in secs)
# if the event is not completed within this timewindow
# it is sent despite the fact
te_timeout_sec = 30
# Decide on event builder strategy. Adaptive will automatically 
# adjust the number of expected RBEvents for each MTBEvent and 
# wait for this number of RBEvents come in 
#build_strategy = "Adaptive" # cannot use both together with NBoards

# in case we want to select a build 
# strategy with a parameter, use
# this section
[event_builder_settings.build_strategy] # this is the other one
WaitForNBoards = 40 # only makes sense with the Poisson trigger

[analysis_engine_settings]
integration_start      = 270.0
integration_window     = 70.0
pedestal_thresh        = 10.0
pedestal_begin_bin     = 10
pedestal_win_bins      = 50
use_zscore             = false
find_pks_t_start       = 270.0
find_pks_t_window      = 70.0
min_peak_size          = 3
find_pks_thresh        = 10.0
max_peaks              = 5
cfd_fraction           = 0.2


