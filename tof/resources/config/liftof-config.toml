##########################################
# Master configuration file for 
# liftof-cc, LELEWAAedition (>= 0.10.0)
#
##########################################

# run files (.toml like this one) stored in this dir
# get worked on automatically
staging_dir           = "/home/gaps/liftof-staging/"
# location to store calibration files on the TOF CPUE
calibration_dir       = "/tofdata/csbf-data/calib/latest/"
# location of the database
db_path               = "/home/gaps/config/gaps_flight.0.10.1.db"
# default runtime of the program
#runtime_sec           = 14400
runtime_sec            = 28800
#runtime_sec           = 576000
# UDP connection to the MTB (does NOT start with tcp://)
mtb_address               = "10.0.1.10:50001"
# Query the TOF computer for CPUMoniData every X secs
cpu_moni_interval_sec     = 120
# Non existent/broken RBs (in range 1-50)
rb_ignorelist             = [10,12, 37,38,43,45,47,48,49]

#rb_ignorelist             = [1,2,4,5,6,7,8,9,10, 11, 12,16,17,18,19, 20, 22,25,26,28,30,   33, 34, 36,37, 38,39,40, 41,42,  43,44, 45]
# should TofHits be calculated for RBEvents? [should be true for flight]
run_analysis_engine       = true
cc_server_address         = "tcp://10.0.1.1:42000"
#fc_pub_address       = "tcp://100.101.96.10:42000"
fc_sub_address            = "tcp://192.168.37.200:41662"
# timeout for the command listener (sleeptime between queries on 
# incoming messages)
cmd_listener_interval_sec = 1

[mtb_settings]
# can be either Gaps, Track, Any or Poisson
# set it to "Unknown" if you want to use 
# pico_hal.py to set the trigger conditions
#trigger_type            = "TrackCentral"
#trigger_type            = "UmbCube"
#trigger_type            = "UmbCubeZ"
#trigger_type            = "UmbCorCube"
#trigger_type            = "Umb3Cube"
#trigger_type             = "CorCubeSide"
trigger_type             = "Any"
#trigger_type             = "Track"

# prescale is between 0 and 1
trigger_prescale        = 0.02
poisson_trigger_rate    = 0
gaps_trigger_use_beta   = true
trace_suppression       = true
# Receive MtbMoniData every X secs
mtb_moni_interval       = 20
mtb_timeout_sec         = 120
rb_int_window           = 1
tiu_emulation_mode      = true
# Achim's channel
#tofbot_webhook        = "https://hooks.slack.com/services/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"
#tofbot channel 
# deactivate tofbot for now
tofbot_webhook          = "null"
#tofbot_webhook          = "https://hooks.slack.com/services/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"

[data_publisher_settings]
mbytes_per_file = 420000000
# location of data stored on the TOF CPU
data_dir = "/tofdata/csbf-data/"
cali_dir = "/tofdata/csbf-data/calib"
# number of tofpackets per file before a new file
# gets started
packs_per_file = 500
# use this address for UCLA teststand (tailscale)
#fc_pub_address       = "tcp://100.101.96.10:42000"
# flight computer needs to subscribe to this address to 
# recieve tof packets
fc_pub_address           = "tcp://192.168.37.20:42000"
# additonally send MasterTriggerEvent packets. This might use a lot 
# of bandwidth, so we might not want to do that in flight
send_mtb_event_packets   = false
send_rbwaveform_packets  = false
send_tof_summary_packets = false
send_tof_event_packets   = true


[cmd_dispatcher_settings]
cmd_log_path = "/home/gaps/log/command.log"
# the ip where the central liftof cc server is listening
cc_server_address         = "tcp://10.0.1.1:42000"
# TOF computer needs to subscribe to this address to 
# recieve commands
fc_sub_address            = "tcp://192.168.37.200:41662"
# timeout for the command listener (sleeptime between queries on 
# incoming messages)
cmd_listener_interval_sec = 1
# block all incoming command requests
deny_all_requests = false


[event_builder_settings]
cachesize      = 100000
n_mte_per_loop = 1
n_rbe_per_loop = 40
# tof event timeout (in secs)
# if the event is not completed within this timewindow
# it is sent despite the fact
te_timeout_sec = 5
# try sorting the events by event id as best as possible
sort_events    = false
# Decide on event builder strategy. Adaptive will automatically 
# adjust the number of expected RBEvents for each MTBEvent and 
# wait for this number of RBEvents come in 
build_strategy = "Adaptive"

# in case we want to select a build 
# strategy with a parameter, use
# this section
#[event_builder_settings.build_strategy]
#WaitForNBoards = 40

[analysis_engine_settings]
integration_start      = 270.0
integration_window     = 70.0
pedestal_thresh        = 10.0
pedestal_begin_bin     = 850
pedestal_win_bins      = 100
use_zscore             = false
find_pks_t_start       = 60.0
find_pks_t_window      = 300.0
min_peak_size          = 10
find_pks_thresh        = 10.0
max_peaks              = 5
cfd_fraction           = 0.2


[rb_settings]
only_perfect_events  = false
calc_crc32           = false
tof_op_mode          = "Default"
trigger_poisson_rate = 0
trigger_fixed_rate   = 0
data_type            = "Physics"
# monitoring interval for RBMoniData in seconds
rb_moni_interval     = 10.0
# monitoring interval for PBMoniData in x*rb_moni_interval
pb_moni_every_x      = 2.0
# monitoring interval for PAMoniData in x*rb_moni_interval
pa_moni_every_x      = 2.0
# monitoring interval for LTBMoniData in x*rb_moni_interval
ltb_moni_every_x     = 2.0

[rb_settings.rb_buff_strategy]
# Read out the buffers approximatly every X seconds and 
# adjust their size based on the RB rate
AdaptToRate = 2


[preamp_settings]
set_preamp_voltages = false
set_strategy = "ControlServer"

[preamp_settings.rat_preamp_biases]
RAT03 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT01 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT20 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT16 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT12 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT02 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT13 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT06 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT14 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT17 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT18 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT19 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT09 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT15 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT10 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT05 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT08 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT07 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT04 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]
RAT11 = [
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
    58.0,
]

