(function() {var type_impls = {
"openssh":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OwningCommand%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#221-357\">source</a><a href=\"#impl-OwningCommand%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"struct\" href=\"openssh/struct.OwningCommand.html\" title=\"struct openssh::OwningCommand\">OwningCommand</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arg\" class=\"method\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#257-259\">source</a><h4 class=\"code-header\">pub fn <a href=\"openssh/struct.OwningCommand.html#tymethod.arg\" class=\"fn\">arg</a>&lt;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.str.html\">str</a>&gt;&gt;(&amp;mut self, arg: A) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Adds an argument to pass to the remote program.</p>\n<p>Before it is passed to the remote host, <code>arg</code> is escaped so that special characters aren’t\nevaluated by the remote shell. If you do not want this behavior, use\n<a href=\"openssh/struct.OwningCommand.html#method.raw_arg\" title=\"method openssh::OwningCommand::raw_arg\"><code>raw_arg</code></a>.</p>\n<p>Only one argument can be passed per use. So instead of:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>.arg(<span class=\"string\">\"-C /path/to/repo\"</span>)</code></pre></div>\n<p>usage would be:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>.arg(<span class=\"string\">\"-C\"</span>)\n.arg(<span class=\"string\">\"/path/to/repo\"</span>)</code></pre></div>\n<p>To pass multiple arguments see <a href=\"openssh/struct.OwningCommand.html#method.args\" title=\"method openssh::OwningCommand::args\"><code>args</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_arg\" class=\"method\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#269-274\">source</a><h4 class=\"code-header\">pub fn <a href=\"openssh/struct.OwningCommand.html#tymethod.raw_arg\" class=\"fn\">raw_arg</a>&lt;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;&gt;(&amp;mut self, arg: A) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Adds an argument to pass to the remote program.</p>\n<p>Unlike <a href=\"openssh/struct.OwningCommand.html#method.arg\" title=\"method openssh::OwningCommand::arg\"><code>arg</code></a>, this method does not shell-escape <code>arg</code>. The argument is passed as written\nto <code>ssh</code>, which will pass it again as an argument to the remote shell. Since the remote\nshell may do argument parsing, characters such as spaces and <code>*</code> may be interpreted by the\nremote shell.</p>\n<p>To pass multiple unescaped arguments see <a href=\"openssh/struct.OwningCommand.html#method.raw_args\" title=\"method openssh::OwningCommand::raw_args\"><code>raw_args</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.args\" class=\"method\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#283-292\">source</a><h4 class=\"code-header\">pub fn <a href=\"openssh/struct.OwningCommand.html#tymethod.args\" class=\"fn\">args</a>&lt;I, A&gt;(&amp;mut self, args: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Self</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = A&gt;,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.str.html\">str</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Adds multiple arguments to pass to the remote program.</p>\n<p>Before they are passed to the remote host, each argument in <code>args</code> is escaped so that\nspecial characters aren’t evaluated by the remote shell. If you do not want this behavior,\nuse <a href=\"openssh/struct.OwningCommand.html#method.raw_args\" title=\"method openssh::OwningCommand::raw_args\"><code>raw_args</code></a>.</p>\n<p>To pass a single argument see <a href=\"openssh/struct.OwningCommand.html#method.arg\" title=\"method openssh::OwningCommand::arg\"><code>arg</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_args\" class=\"method\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#302-311\">source</a><h4 class=\"code-header\">pub fn <a href=\"openssh/struct.OwningCommand.html#tymethod.raw_args\" class=\"fn\">raw_args</a>&lt;I, A&gt;(&amp;mut self, args: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Self</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = A&gt;,\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/ffi/os_str/struct.OsStr.html\" title=\"struct std::ffi::os_str::OsStr\">OsStr</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Adds multiple arguments to pass to the remote program.</p>\n<p>Unlike <a href=\"openssh/struct.OwningCommand.html#method.args\" title=\"method openssh::OwningCommand::args\"><code>args</code></a>, this method does not shell-escape <code>args</code>. The arguments are passed as\nwritten to <code>ssh</code>, which will pass them again as arguments to the remote shell. However,\nsince the remote shell may do argument parsing, characters such as spaces and <code>*</code> may be\ninterpreted by the remote shell.</p>\n<p>To pass a single argument see <a href=\"openssh/struct.OwningCommand.html#method.raw_arg\" title=\"method openssh::OwningCommand::raw_arg\"><code>raw_arg</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stdin\" class=\"method\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#320-326\">source</a><h4 class=\"code-header\">pub fn <a href=\"openssh/struct.OwningCommand.html#tymethod.stdin\" class=\"fn\">stdin</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"openssh/struct.Stdio.html\" title=\"struct openssh::Stdio\">Stdio</a>&gt;&gt;(&amp;mut self, cfg: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Configuration for the remote process’s standard input (stdin) handle.</p>\n<p>Defaults to <a href=\"struct.Stdio.html#method.inherit\"><code>inherit</code></a> when used with <code>spawn</code> or <code>status</code>, and\ndefaults to <a href=\"struct.Stdio.html#method.null\"><code>null</code></a> when used with <code>output</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stdout\" class=\"method\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#335-341\">source</a><h4 class=\"code-header\">pub fn <a href=\"openssh/struct.OwningCommand.html#tymethod.stdout\" class=\"fn\">stdout</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"openssh/struct.Stdio.html\" title=\"struct openssh::Stdio\">Stdio</a>&gt;&gt;(&amp;mut self, cfg: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Configuration for the remote process’s standard output (stdout) handle.</p>\n<p>Defaults to <a href=\"struct.Stdio.html#method.inherit\"><code>inherit</code></a> when used with <code>spawn</code> or <code>status</code>, and\ndefaults to <a href=\"struct.Stdio.html#method.piped\"><code>piped</code></a> when used with <code>output</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stderr\" class=\"method\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#350-356\">source</a><h4 class=\"code-header\">pub fn <a href=\"openssh/struct.OwningCommand.html#tymethod.stderr\" class=\"fn\">stderr</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"openssh/struct.Stdio.html\" title=\"struct openssh::Stdio\">Stdio</a>&gt;&gt;(&amp;mut self, cfg: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Configuration for the remote process’s standard error (stderr) handle.</p>\n<p>Defaults to <a href=\"struct.Stdio.html#method.inherit\"><code>inherit</code></a> when used with <code>spawn</code> or <code>status</code>, and\ndefaults to <a href=\"struct.Stdio.html#method.piped\"><code>piped</code></a> when used with <code>output</code>.</p>\n</div></details></div></details>",0,"openssh::Command"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OwningCommand%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#359-417\">source</a><a href=\"#impl-OwningCommand%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"struct\" href=\"openssh/struct.OwningCommand.html\" title=\"struct openssh::OwningCommand\">OwningCommand</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.spawn\" class=\"method\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#379-391\">source</a><h4 class=\"code-header\">pub async fn <a href=\"openssh/struct.OwningCommand.html#tymethod.spawn\" class=\"fn\">spawn</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"openssh/struct.Child.html\" title=\"struct openssh::Child\">Child</a>&lt;S&gt;, <a class=\"enum\" href=\"openssh/enum.Error.html\" title=\"enum openssh::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Executes the remote command without waiting for it, returning a handle to it\ninstead.</p>\n<p>By default, stdin, stdout and stderr are inherited.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.output\" class=\"method\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#397-409\">source</a><h4 class=\"code-header\">pub async fn <a href=\"openssh/struct.OwningCommand.html#tymethod.output\" class=\"fn\">output</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/process/struct.Output.html\" title=\"struct std::process::Output\">Output</a>, <a class=\"enum\" href=\"openssh/enum.Error.html\" title=\"enum openssh::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Executes the remote command, waiting for it to finish and collecting all of its output.</p>\n<p>By default, stdout and stderr are captured (and used to provide the resulting\noutput) and stdin is set to <code>Stdio::null()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.status\" class=\"method\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#414-416\">source</a><h4 class=\"code-header\">pub async fn <a href=\"openssh/struct.OwningCommand.html#tymethod.status\" class=\"fn\">status</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/process/struct.ExitStatus.html\" title=\"struct std::process::ExitStatus\">ExitStatus</a>, <a class=\"enum\" href=\"openssh/enum.Error.html\" title=\"enum openssh::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Executes the remote command, waiting for it to finish and collecting its exit status.</p>\n<p>By default, stdin, stdout and stderr are inherited.</p>\n</div></details></div></details>",0,"openssh::Command"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-OwningCommand%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#211\">source</a><a href=\"#impl-Debug-for-OwningCommand%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"openssh/struct.OwningCommand.html\" title=\"struct openssh::OwningCommand\">OwningCommand</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/openssh/command.rs.html#211\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","openssh::Command"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()