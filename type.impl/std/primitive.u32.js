(function() {var type_impls = {
"freetype_sys":[],
"nix":[],
"owned_ttf_parser":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromData-for-u32\" class=\"impl\"><a href=\"#impl-FromData-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"owned_ttf_parser/trait.FromData.html\" title=\"trait owned_ttf_parser::FromData\">FromData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIZE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"owned_ttf_parser/trait.FromData.html#associatedconstant.SIZE\" class=\"constant\">SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a> = 4usize</h4></section></summary><div class='docblock'>Object’s raw data size. <a href=\"owned_ttf_parser/trait.FromData.html#associatedconstant.SIZE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"owned_ttf_parser/trait.FromData.html#tymethod.parse\" class=\"fn\">parse</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Parses an object from a raw data.</div></details></div></details>","FromData","owned_ttf_parser::opentype_layout::VariationIndex"]],
"polars":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Cf32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f32>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Cf64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<f64>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#759\">source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitChunk-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/bit_chunk.rs.html#48\">source</a><a href=\"#impl-BitChunk-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_arrow/types/bit_chunk/trait.BitChunk.html\" title=\"trait polars_arrow::types::bit_chunk::BitChunk\">BitChunk</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/bit_chunk.rs.html#48\">source</a><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/types/bit_chunk/trait.BitChunk.html#tymethod.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"polars_arrow/types/native/trait.NativeType.html\" title=\"trait polars_arrow::types::native::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"polars_arrow/types/native/trait.NativeType.html#associatedtype.Bytes\" title=\"type polars_arrow::types::native::NativeType::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>convert itself into bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/bit_chunk.rs.html#48\">source</a><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/types/bit_chunk/trait.BitChunk.html#tymethod.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(v: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"polars_arrow/types/native/trait.NativeType.html\" title=\"trait polars_arrow::types::native::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"polars_arrow/types/native/trait.NativeType.html#associatedtype.Bytes\" title=\"type polars_arrow::types::native::NativeType::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>convert itself from bytes.</div></details></div></details>","BitChunk","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bounded-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#60\">source</a><a href=\"#impl-Bounded-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/bounds/trait.Bounded.html\" title=\"trait num_traits::bounds::Bounded\">Bounded</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#60\">source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/bounds/trait.Bounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/bounds.rs.html#60\">source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/bounds/trait.Bounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","Bounded","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#24\">source</a><a href=\"#impl-CheckedAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedAdd.html\" title=\"trait num_traits::ops::checked::CheckedAdd\">CheckedAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#24\">source</a><a href=\"#method.checked_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedAdd.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Adds two numbers, checking for overflow. If overflow happens, <code>None</code> is\nreturned.</div></details></div></details>","CheckedAdd","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedDiv-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#89\">source</a><a href=\"#impl-CheckedDiv-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedDiv.html\" title=\"trait num_traits::ops::checked::CheckedDiv\">CheckedDiv</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#89\">source</a><a href=\"#method.checked_div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedDiv.html#tymethod.checked_div\" class=\"fn\">checked_div</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, <code>None</code> is returned.</div></details></div></details>","CheckedDiv","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedEuclid-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#185\">source</a><a href=\"#impl-CheckedEuclid-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/euclid/trait.CheckedEuclid.html\" title=\"trait num_traits::ops::euclid::CheckedEuclid\">CheckedEuclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#185\">source</a><a href=\"#method.checked_div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_div_euclid\" class=\"fn\">checked_div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Performs euclid division that returns <code>None</code> instead of panicking on division by zero\nand instead of wrapping around on underflow and overflow.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#185\">source</a><a href=\"#method.checked_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/euclid/trait.CheckedEuclid.html#tymethod.checked_rem_euclid\" class=\"fn\">checked_rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Finds the euclid remainder of dividing two numbers, checking for underflow, overflow and\ndivision by zero. If any of that happens, <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#163\">source</a><a href=\"#method.checked_div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/euclid/trait.CheckedEuclid.html#method.checked_div_rem_euclid\" class=\"fn\">checked_div_rem_euclid</a>(&amp;self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(Self, Self)</a>&gt;</h4></section></summary><div class='docblock'>Returns both the quotient and remainder from checked Euclidean division. <a href=\"num_traits/ops/euclid/trait.CheckedEuclid.html#method.checked_div_rem_euclid\">Read more</a></div></details></div></details>","CheckedEuclid","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#67\">source</a><a href=\"#impl-CheckedMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedMul.html\" title=\"trait num_traits::ops::checked::CheckedMul\">CheckedMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#67\">source</a><a href=\"#method.checked_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedMul.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, <code>None</code> is returned.</div></details></div></details>","CheckedMul","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedNeg-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#174\">source</a><a href=\"#impl-CheckedNeg-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedNeg.html\" title=\"trait num_traits::ops::checked::CheckedNeg\">CheckedNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#174\">source</a><a href=\"#method.checked_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Negates a number, returning <code>None</code> for results that can’t be represented, like signed <code>MIN</code>\nvalues that can’t be positive, or non-zero unsigned values that can’t be negative. <a href=\"num_traits/ops/checked/trait.CheckedNeg.html#tymethod.checked_neg\">Read more</a></div></details></div></details>","CheckedNeg","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedRem-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#128\">source</a><a href=\"#impl-CheckedRem-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedRem.html\" title=\"trait num_traits::ops::checked::CheckedRem\">CheckedRem</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#128\">source</a><a href=\"#method.checked_rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\" class=\"fn\">checked_rem</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Finds the remainder of dividing two numbers, checking for underflow, overflow and division\nby zero. If any of that happens, <code>None</code> is returned. <a href=\"num_traits/ops/checked/trait.CheckedRem.html#tymethod.checked_rem\">Read more</a></div></details></div></details>","CheckedRem","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShl-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#218\">source</a><a href=\"#impl-CheckedShl-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedShl.html\" title=\"trait num_traits::ops::checked::CheckedShl\">CheckedShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#218\">source</a><a href=\"#method.checked_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\" class=\"fn\">checked_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"num_traits/ops/checked/trait.CheckedShl.html#tymethod.checked_shl\">Read more</a></div></details></div></details>","CheckedShl","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedShr-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#251\">source</a><a href=\"#impl-CheckedShr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedShr.html\" title=\"trait num_traits::ops::checked::CheckedShr\">CheckedShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#251\">source</a><a href=\"#method.checked_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\" class=\"fn\">checked_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code>\nif <code>rhs</code> is larger than or equal to the number of bits in <code>self</code>. <a href=\"num_traits/ops/checked/trait.CheckedShr.html#tymethod.checked_shr\">Read more</a></div></details></div></details>","CheckedShr","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#45\">source</a><a href=\"#impl-CheckedSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/checked/trait.CheckedSub.html\" title=\"trait num_traits::ops::checked::CheckedSub\">CheckedSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/checked.rs.html#45\">source</a><a href=\"#method.checked_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/checked/trait.CheckedSub.html#tymethod.checked_sub\" class=\"fn\">checked_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Subtracts two numbers, checking for underflow. If underflow happens,\n<code>None</code> is returned.</div></details></div></details>","CheckedSub","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstOne-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#165\">source</a><a href=\"#impl-ConstOne-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.ConstOne.html\" title=\"trait num_traits::identities::ConstOne\">ConstOne</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ONE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#165\">source</a><a href=\"#associatedconstant.ONE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"num_traits/identities/trait.ConstOne.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> = 1u32</h4></section></summary><div class='docblock'>The multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","ConstOne","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstZero-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#60\">source</a><a href=\"#impl-ConstZero-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.ConstZero.html\" title=\"trait num_traits::identities::ConstZero\">ConstZero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ZERO\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#60\">source</a><a href=\"#associatedconstant.ZERO\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"num_traits/identities/trait.ConstZero.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> = 0u32</h4></section></summary><div class='docblock'>The additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","ConstZero","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DictionaryKey-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/dictionary/mod.rs.html#83\">source</a><a href=\"#impl-DictionaryKey-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_arrow/array/dictionary/trait.DictionaryKey.html\" title=\"trait polars_arrow::array::dictionary::DictionaryKey\">DictionaryKey</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.KEY_TYPE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/dictionary/mod.rs.html#84\">source</a><a href=\"#associatedconstant.KEY_TYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"polars_arrow/array/dictionary/trait.DictionaryKey.html#associatedconstant.KEY_TYPE\" class=\"constant\">KEY_TYPE</a>: <a class=\"enum\" href=\"polars_arrow/datatypes/physical_type/enum.IntegerType.html\" title=\"enum polars_arrow::datatypes::physical_type::IntegerType\">IntegerType</a> = IntegerType::UInt32</h4></section></summary><div class='docblock'>The corresponding <a href=\"polars_arrow/datatypes/physical_type/enum.IntegerType.html\" title=\"enum polars_arrow::datatypes::physical_type::IntegerType\"><code>IntegerType</code></a> of this key</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.always_fits_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/dictionary/mod.rs.html#86\">source</a><a href=\"#method.always_fits_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/dictionary/trait.DictionaryKey.html#method.always_fits_usize\" class=\"fn\">always_fits_usize</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If the key type always can be converted to <code>usize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/dictionary/mod.rs.html#44\">source</a><a href=\"#method.as_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"polars_arrow/array/dictionary/trait.DictionaryKey.html#method.as_usize\" class=\"fn\">as_usize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Represents this key as a <code>usize</code>. <a href=\"polars_arrow/array/dictionary/trait.DictionaryKey.html#method.as_usize\">Read more</a></div></details></div></details>","DictionaryKey","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Euclid-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#89\">source</a><a href=\"#impl-Euclid-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/euclid/trait.Euclid.html\" title=\"trait num_traits::ops::euclid::Euclid\">Euclid</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#89\">source</a><a href=\"#method.div_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\" class=\"fn\">div_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Calculates Euclidean division, the matching method for <code>rem_euclid</code>. <a href=\"num_traits/ops/euclid/trait.Euclid.html#tymethod.div_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#89\">source</a><a href=\"#method.rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\" class=\"fn\">rem_euclid</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Calculates the least nonnegative remainder of <code>self (mod v)</code>. <a href=\"num_traits/ops/euclid/trait.Euclid.html#tymethod.rem_euclid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_rem_euclid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/euclid.rs.html#67\">source</a><a href=\"#method.div_rem_euclid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/euclid/trait.Euclid.html#method.div_rem_euclid\" class=\"fn\">div_rem_euclid</a>(&amp;self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(Self, Self)</a></h4></section></summary><div class='docblock'>Returns both the quotient and remainder from Euclidean division. <a href=\"num_traits/ops/euclid/trait.Euclid.html#method.div_rem_euclid\">Read more</a></div></details></div></details>","Euclid","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromBytes-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#237\">source</a><a href=\"#impl-FromBytes-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">4</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#237\">source</a><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in big endian. <a href=\"num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#237\">source</a><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Create a number from its representation as a byte array in little endian. <a href=\"num_traits/ops/bytes/trait.FromBytes.html#tymethod.from_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#237\">source</a><a href=\"#method.from_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.FromBytes.html#method.from_ne_bytes\" class=\"fn\">from_ne_bytes</a>(bytes: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.FromBytes.html\" title=\"trait num_traits::ops::bytes::FromBytes\">FromBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.FromBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::FromBytes::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Create a number from its memory representation as a byte array in native endianness. <a href=\"num_traits/ops/bytes/trait.FromBytes.html#method.from_ne_bytes\">Read more</a></div></details></div></details>","FromBytes","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#impl-FromPrimitive-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#569\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details></div></details>","FromPrimitive","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/index.rs.html#62\">source</a><a href=\"#impl-Index-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_arrow/types/index/trait.Index.html\" title=\"trait polars_arrow::types::index::Index\">Index</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/index.rs.html#62\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/types/index/trait.Index.html#tymethod.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert itself to <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/index.rs.html#62\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/types/index/trait.Index.html#tymethod.from_usize\" class=\"fn\">from_usize</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Convert itself from <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_as_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/index.rs.html#62\">source</a><a href=\"#method.from_as_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/types/index/trait.Index.html#tymethod.from_as_usize\" class=\"fn\">from_as_usize</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert itself from <a href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\" title=\"primitive usize\"><code>usize</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.range\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/index.rs.html#25\">source</a><a href=\"#method.range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/types/index/trait.Index.html#method.range\" class=\"fn\">range</a>(start: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>, end: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_arrow/types/index/struct.IndexRange.html\" title=\"struct polars_arrow::types::index::IndexRange\">IndexRange</a>&lt;Self&gt;&gt;</h4></section></summary><div class='docblock'>An iterator from (inclusive) <code>start</code> to (exclusive) <code>end</code>.</div></details></div></details>","Index","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Literal-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_plan/logical_plan/lit.rs.html#298\">source</a><a href=\"#impl-Literal-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars/prelude/trait.Literal.html\" title=\"trait polars::prelude::Literal\">Literal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_plan/logical_plan/lit.rs.html#298\">source</a><a href=\"#method.lit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/trait.Literal.html#tymethod.lit\" class=\"fn\">lit</a>(self) -&gt; <a class=\"enum\" href=\"polars/prelude/enum.Expr.html\" title=\"enum polars::prelude::Expr\">Expr</a></h4></section></summary><div class='docblock'><a href=\"polars/prelude/enum.Expr.html#variant.Literal\" title=\"variant polars::prelude::Expr::Literal\">Literal</a> expression.</div></details></div></details>","Literal","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#71\">source</a><a href=\"#impl-MulAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The resulting type after applying the fused multiply-add.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#71\">source</a><a href=\"#method.mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/mul_add/trait.MulAdd.html#tymethod.mul_add\" class=\"fn\">mul_add</a>(self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"num_traits/ops/mul_add/trait.MulAdd.html\" title=\"trait num_traits::ops::mul_add::MulAdd\">MulAdd</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/mul_add/trait.MulAdd.html#associatedtype.Output\" title=\"type num_traits::ops::mul_add::MulAdd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the fused multiply-add operation <code>(self * a) + b</code></div></details></div></details>","MulAdd","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAddAssign-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#101\">source</a><a href=\"#impl-MulAddAssign-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/mul_add/trait.MulAddAssign.html\" title=\"trait num_traits::ops::mul_add::MulAddAssign\">MulAddAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/mul_add.rs.html#101\">source</a><a href=\"#method.mul_add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/mul_add/trait.MulAddAssign.html#tymethod.mul_add_assign\" class=\"fn\">mul_add_assign</a>(&amp;mut self, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the fused multiply-add assignment operation <code>*self = (*self * a) + b</code></div></details></div></details>","MulAddAssign","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NativeType-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/native.rs.html#88\">source</a><a href=\"#impl-NativeType-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_arrow/types/native/trait.NativeType.html\" title=\"trait polars_arrow::types::native::NativeType\">NativeType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.PRIMITIVE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/native.rs.html#88\">source</a><a href=\"#associatedconstant.PRIMITIVE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"polars_arrow/types/native/trait.NativeType.html#associatedconstant.PRIMITIVE\" class=\"constant\">PRIMITIVE</a>: <a class=\"enum\" href=\"polars_arrow/types/enum.PrimitiveType.html\" title=\"enum polars_arrow::types::PrimitiveType\">PrimitiveType</a> = PrimitiveType::UInt32</h4></section></summary><div class='docblock'>The corresponding variant of <a href=\"polars_arrow/types/enum.PrimitiveType.html\" title=\"enum polars_arrow::types::PrimitiveType\"><code>PrimitiveType</code></a>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_arrow/types/native/trait.NativeType.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Type denoting its representation as bytes.\nThis is <code>[u8; N]</code> where <code>N = size_of::&lt;T&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/native.rs.html#88\">source</a><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/types/native/trait.NativeType.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"polars_arrow/types/native/trait.NativeType.html\" title=\"trait polars_arrow::types::native::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"polars_arrow/types/native/trait.NativeType.html#associatedtype.Bytes\" title=\"type polars_arrow::types::native::NativeType::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>To bytes in little endian</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/native.rs.html#88\">source</a><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/types/native/trait.NativeType.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"polars_arrow/types/native/trait.NativeType.html\" title=\"trait polars_arrow::types::native::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"polars_arrow/types/native/trait.NativeType.html#associatedtype.Bytes\" title=\"type polars_arrow::types::native::NativeType::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>To bytes in big endian</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/native.rs.html#88\">source</a><a href=\"#method.from_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/types/native/trait.NativeType.html#tymethod.from_le_bytes\" class=\"fn\">from_le_bytes</a>(bytes: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"polars_arrow/types/native/trait.NativeType.html\" title=\"trait polars_arrow::types::native::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"polars_arrow/types/native/trait.NativeType.html#associatedtype.Bytes\" title=\"type polars_arrow::types::native::NativeType::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>From bytes in little endian</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/native.rs.html#88\">source</a><a href=\"#method.from_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/types/native/trait.NativeType.html#tymethod.from_be_bytes\" class=\"fn\">from_be_bytes</a>(bytes: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"polars_arrow/types/native/trait.NativeType.html\" title=\"trait polars_arrow::types::native::NativeType\">NativeType</a>&gt;::<a class=\"associatedtype\" href=\"polars_arrow/types/native/trait.NativeType.html#associatedtype.Bytes\" title=\"type polars_arrow::types::native::NativeType::Bytes\">Bytes</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>From bytes in big endian</div></details></div></details>","NativeType","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/lib.rs.html#174\">source</a><a href=\"#impl-Num-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/lib.rs.html#174\">source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.str.html\">str</a>, radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/num/error/struct.ParseIntError.html\" title=\"struct core::num::error::ParseIntError\">ParseIntError</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"num_traits/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumCast-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#685\">source</a><a href=\"#impl-NumCast-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#685\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.NumCast.html#tymethod.from\" class=\"fn\">from</a>&lt;N&gt;(n: N) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a>,</div></h4></section></summary><div class='docblock'>Creates a number from another value that can be converted into\na primitive via the <code>ToPrimitive</code> trait. If the source value cannot be\nrepresented by the target type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.NumCast.html#tymethod.from\">Read more</a></div></details></div></details>","NumCast","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumericNative-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/mod.rs.html#298\">source</a><a href=\"#impl-NumericNative-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars/datatypes/trait.NumericNative.html\" title=\"trait polars::datatypes::NumericNative\">NumericNative</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.PolarsType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PolarsType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars/datatypes/trait.NumericNative.html#associatedtype.PolarsType\" class=\"associatedtype\">PolarsType</a> = <a class=\"struct\" href=\"polars/datatypes/struct.UInt32Type.html\" title=\"struct polars::datatypes::UInt32Type\">UInt32Type</a></h4></section><section id=\"associatedtype.TrueDivPolarsType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TrueDivPolarsType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars/datatypes/trait.NumericNative.html#associatedtype.TrueDivPolarsType\" class=\"associatedtype\">TrueDivPolarsType</a> = <a class=\"struct\" href=\"polars/datatypes/struct.Float64Type.html\" title=\"struct polars::datatypes::Float64Type\">Float64Type</a></h4></section></div></details>","NumericNative","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#165\">source</a><a href=\"#impl-One-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#165\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#165\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#118\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#25\">source</a><a href=\"#impl-OverflowingAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/overflowing/trait.OverflowingAdd.html\" title=\"trait num_traits::ops::overflowing::OverflowingAdd\">OverflowingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#25\">source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/overflowing/trait.OverflowingAdd.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the sum along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingAdd","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#67\">source</a><a href=\"#impl-OverflowingMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/overflowing/trait.OverflowingMul.html\" title=\"trait num_traits::ops::overflowing::OverflowingMul\">OverflowingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#67\">source</a><a href=\"#method.overflowing_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/overflowing/trait.OverflowingMul.html#tymethod.overflowing_mul\" class=\"fn\">overflowing_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the product along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingMul","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OverflowingSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#46\">source</a><a href=\"#impl-OverflowingSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/overflowing/trait.OverflowingSub.html\" title=\"trait num_traits::ops::overflowing::OverflowingSub\">OverflowingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/overflowing.rs.html#46\">source</a><a href=\"#method.overflowing_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/overflowing/trait.OverflowingSub.html#tymethod.overflowing_sub\" class=\"fn\">overflowing_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Returns a tuple of the difference along with a boolean indicating whether an arithmetic overflow would occur.\nIf an overflow would have occurred then the wrapped value is returned.</div></details></div></details>","OverflowingSub","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#86\">source</a><a href=\"#impl-Pow%3C%26u16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#86\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u16>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#87\">source</a><a href=\"#impl-Pow%3C%26u32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#87\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u32>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26u8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#85\">source</a><a href=\"#impl-Pow%3C%26u8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#85\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a u8>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3C%26usize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#88\">source</a><a href=\"#impl-Pow%3C%26usize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#88\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<&'a usize>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#86\">source</a><a href=\"#impl-Pow%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#86\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u16>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#87\">source</a><a href=\"#impl-Pow%3Cu32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#87\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u32>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#85\">source</a><a href=\"#impl-Pow%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#85\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<u8>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pow%3Cusize%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#88\">source</a><a href=\"#impl-Pow%3Cusize%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/pow/trait.Pow.html\" title=\"trait num_traits::pow::Pow\">Pow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/pow/trait.Pow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The result after applying the operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/pow.rs.html#88\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\" class=\"fn\">pow</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns <code>self</code> to the power <code>rhs</code>. <a href=\"num_traits/pow/trait.Pow.html#tymethod.pow\">Read more</a></div></details></div></details>","Pow<usize>","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimInt-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#impl-PrimInt-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.count_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of ones in the binary representation of <code>self</code>. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.count_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.count_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.count_zeros\" class=\"fn\">count_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of zeros in the binary representation of <code>self</code>. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.count_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.leading_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#method.leading_ones\" class=\"fn\">leading_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading ones in the binary representation\nof <code>self</code>. <a href=\"num_traits/int/trait.PrimInt.html#method.leading_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.leading_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of leading zeros in the binary representation\nof <code>self</code>. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.leading_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_ones\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.trailing_ones\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#method.trailing_ones\" class=\"fn\">trailing_ones</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing ones in the binary representation\nof <code>self</code>. <a href=\"num_traits/int/trait.PrimInt.html#method.trailing_ones\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.trailing_zeros\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the number of trailing zeros in the binary representation\nof <code>self</code>. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.trailing_zeros\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.rotate_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.rotate_left\" class=\"fn\">rotate_left</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the end of the resulting integer. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.rotate_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.rotate_right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.rotate_right\" class=\"fn\">rotate_right</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, wrapping\nthe truncated bits to the beginning of the resulting integer. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.rotate_right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.signed_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.signed_shl\" class=\"fn\">signed_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.signed_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.signed_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.signed_shr\" class=\"fn\">signed_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, copying\nthe “sign bit” in the most significant bits even for unsigned types. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.signed_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.unsigned_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\" class=\"fn\">unsigned_shl</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the left by a specified amount, <code>n</code>, filling\nzeros in the least significant bits. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.unsigned_shl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.unsigned_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\" class=\"fn\">unsigned_shr</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Shifts the bits to the right by a specified amount, <code>n</code>, filling\nzeros in the most significant bits. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.unsigned_shr\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.swap_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\" class=\"fn\">swap_bytes</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Reverses the byte order of the integer. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.swap_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse_bits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.reverse_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#method.reverse_bits\" class=\"fn\">reverse_bits</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Reverses the order of bits in the integer. <a href=\"num_traits/int/trait.PrimInt.html#method.reverse_bits\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.from_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.from_be\" class=\"fn\">from_be</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert an integer from big endian to the target’s endianness. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.from_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.from_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.from_le\" class=\"fn\">from_le</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert an integer from little endian to the target’s endianness. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.from_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.to_be\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.to_be\" class=\"fn\">to_be</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to big endian from the target’s endianness. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.to_be\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.to_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.to_le\" class=\"fn\">to_le</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert <code>self</code> to little endian from the target’s endianness. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.to_le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/int.rs.html#498\">source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/int/trait.PrimInt.html#tymethod.pow\" class=\"fn\">pow</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Raises self to the power of <code>exp</code>, using exponentiation by squaring. <a href=\"num_traits/int/trait.PrimInt.html#tymethod.pow\">Read more</a></div></details></div></details>","PrimInt","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturating-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#32\">source</a><a href=\"#impl-Saturating-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/saturating/trait.Saturating.html\" title=\"trait num_traits::ops::saturating::Saturating\">Saturating</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#32\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#32\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/saturating/trait.Saturating.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(self, v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.</div></details></div></details>","Saturating","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#54\">source</a><a href=\"#impl-SaturatingAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/saturating/trait.SaturatingAdd.html\" title=\"trait num_traits::ops::saturating::SaturatingAdd\">SaturatingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#54\">source</a><a href=\"#method.saturating_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/saturating/trait.SaturatingAdd.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating addition. Computes <code>self + other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingAdd","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#96\">source</a><a href=\"#impl-SaturatingMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/saturating/trait.SaturatingMul.html\" title=\"trait num_traits::ops::saturating::SaturatingMul\">SaturatingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#96\">source</a><a href=\"#method.saturating_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/saturating/trait.SaturatingMul.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating multiplication. Computes <code>self * other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingMul","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SaturatingSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#75\">source</a><a href=\"#impl-SaturatingSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/saturating/trait.SaturatingSub.html\" title=\"trait num_traits::ops::saturating::SaturatingSub\">SaturatingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/saturating.rs.html#75\">source</a><a href=\"#method.saturating_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/saturating/trait.SaturatingSub.html#tymethod.saturating_sub\" class=\"fn\">saturating_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Saturating subtraction. Computes <code>self - other</code>, saturating at the relevant high or low boundary of\nthe type.</div></details></div></details>","SaturatingSub","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Simd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/types/simd/mod.rs.html#156\">source</a><a href=\"#impl-Simd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_arrow/types/simd/trait.Simd.html\" title=\"trait polars_arrow::types::simd::Simd\">Simd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Simd\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Simd\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_arrow/types/simd/trait.Simd.html#associatedtype.Simd\" class=\"associatedtype\">Simd</a> = <a class=\"struct\" href=\"polars_arrow/types/simd/native/struct.u32x16.html\" title=\"struct polars_arrow::types::simd::native::u32x16\">u32x16</a></h4></section></summary><div class='docblock'>The SIMD type associated with this trait.\nThis type supports SIMD operations</div></details></div></details>","Simd","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TakeExtremum-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/frame/group_by/aggregations/mod.rs.html#283\">source</a><a href=\"#impl-TakeExtremum-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars/frame/group_by/aggregations/trait.TakeExtremum.html\" title=\"trait polars::frame::group_by::aggregations::TakeExtremum\">TakeExtremum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.take_min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/frame/group_by/aggregations/mod.rs.html#283\">source</a><a href=\"#method.take_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/frame/group_by/aggregations/trait.TakeExtremum.html#tymethod.take_min\" class=\"fn\">take_min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.take_max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/frame/group_by/aggregations/mod.rs.html#283\">source</a><a href=\"#method.take_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/frame/group_by/aggregations/trait.TakeExtremum.html#tymethod.take_max\" class=\"fn\">take_max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","TakeExtremum","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToBytes-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#237\">source</a><a href=\"#impl-ToBytes-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.array.html\">4</a>]</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_be_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#237\">source</a><a href=\"#method.to_be_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_be_bytes\" class=\"fn\">to_be_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in big-endian byte order. <a href=\"num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_be_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_le_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#237\">source</a><a href=\"#method.to_le_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_le_bytes\" class=\"fn\">to_le_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in little-endian byte order. <a href=\"num_traits/ops/bytes/trait.ToBytes.html#tymethod.to_le_bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ne_bytes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/bytes.rs.html#237\">source</a><a href=\"#method.to_ne_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/bytes/trait.ToBytes.html#method.to_ne_bytes\" class=\"fn\">to_ne_bytes</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"num_traits/ops/bytes/trait.ToBytes.html\" title=\"trait num_traits::ops::bytes::ToBytes\">ToBytes</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/ops/bytes/trait.ToBytes.html#associatedtype.Bytes\" title=\"type num_traits::ops::bytes::ToBytes::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Return the memory representation of this number as a byte array in native byte order. <a href=\"num_traits/ops/bytes/trait.ToBytes.html#method.to_ne_bytes\">Read more</a></div></details></div></details>","ToBytes","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPrimitive-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#impl-ToPrimitive-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_isize\" class=\"fn\">to_isize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>isize</code>. If the value cannot be\nrepresented by an <code>isize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i8\" class=\"fn\">to_i8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be\nrepresented by an <code>i8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i16\" class=\"fn\">to_i16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot be\nrepresented by an <code>i16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i32\" class=\"fn\">to_i32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot be\nrepresented by an <code>i32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_i64\" class=\"fn\">to_i64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot be\nrepresented by an <code>i64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\" class=\"fn\">to_i128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot be\nrepresented by an <code>i128</code> (<code>i64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_usize\" class=\"fn\">to_usize</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot be\nrepresented by a <code>usize</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u8\" class=\"fn\">to_u8</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be\nrepresented by a <code>u8</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u16\" class=\"fn\">to_u16</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be\nrepresented by a <code>u16</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u32\" class=\"fn\">to_u32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be\nrepresented by a <code>u32</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#tymethod.to_u64\" class=\"fn\">to_u64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be\nrepresented by a <code>u64</code>, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\" class=\"fn\">to_u128</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot be\nrepresented by a <code>u128</code> (<code>u64</code> under the default implementation), then\n<code>None</code> is returned. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f32\" class=\"fn\">to_f32</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#265\">source</a><a href=\"#method.to_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\" class=\"fn\">to_f64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to positive\nor negative inifinity, otherwise <code>None</code> is returned if the value cannot\nbe represented by an <code>f64</code>. <a href=\"num_traits/cast/trait.ToPrimitive.html#method.to_f64\">Read more</a></div></details></div></details>","ToPrimitive","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingAdd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#32\">source</a><a href=\"#impl-WrappingAdd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/wrapping/trait.WrappingAdd.html\" title=\"trait num_traits::ops::wrapping::WrappingAdd\">WrappingAdd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#32\">source</a><a href=\"#method.wrapping_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/wrapping/trait.WrappingAdd.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) addition. Computes <code>self + other</code>, wrapping around at the boundary of\nthe type.</div></details></div></details>","WrappingAdd","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingMul-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#74\">source</a><a href=\"#impl-WrappingMul-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/wrapping/trait.WrappingMul.html\" title=\"trait num_traits::ops::wrapping::WrappingMul\">WrappingMul</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#74\">source</a><a href=\"#method.wrapping_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/wrapping/trait.WrappingMul.html#tymethod.wrapping_mul\" class=\"fn\">wrapping_mul</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) multiplication. Computes <code>self * other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingMul","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingNeg-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#121\">source</a><a href=\"#impl-WrappingNeg-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/wrapping/trait.WrappingNeg.html\" title=\"trait num_traits::ops::wrapping::WrappingNeg\">WrappingNeg</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#121\">source</a><a href=\"#method.wrapping_neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) negation. Computes <code>-self</code>,\nwrapping around at the boundary of the type. <a href=\"num_traits/ops/wrapping/trait.WrappingNeg.html#tymethod.wrapping_neg\">Read more</a></div></details></div></details>","WrappingNeg","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShl-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#164\">source</a><a href=\"#impl-WrappingShl-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/wrapping/trait.WrappingShl.html\" title=\"trait num_traits::ops::wrapping::WrappingShl\">WrappingShl</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#164\">source</a><a href=\"#method.wrapping_shl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\" class=\"fn\">wrapping_shl</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"num_traits/ops/wrapping/trait.WrappingShl.html#tymethod.wrapping_shl\">Read more</a></div></details></div></details>","WrappingShl","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingShr-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#197\">source</a><a href=\"#impl-WrappingShr-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/wrapping/trait.WrappingShr.html\" title=\"trait num_traits::ops::wrapping::WrappingShr\">WrappingShr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_shr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#197\">source</a><a href=\"#method.wrapping_shr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\" class=\"fn\">wrapping_shr</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>,\nwhere <code>mask</code> removes any high order bits of <code>rhs</code> that would\ncause the shift to exceed the bitwidth of the type. <a href=\"num_traits/ops/wrapping/trait.WrappingShr.html#tymethod.wrapping_shr\">Read more</a></div></details></div></details>","WrappingShr","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WrappingSub-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#53\">source</a><a href=\"#impl-WrappingSub-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/ops/wrapping/trait.WrappingSub.html\" title=\"trait num_traits::ops::wrapping::WrappingSub\">WrappingSub</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/ops/wrapping.rs.html#53\">source</a><a href=\"#method.wrapping_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/ops/wrapping/trait.WrappingSub.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(&amp;self, v: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Wrapping (modular) subtraction. Computes <code>self - other</code>, wrapping around at the boundary\nof the type.</div></details></div></details>","WrappingSub","polars::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#60\">source</a><a href=\"#impl-Zero-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#60\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#60\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","polars::prelude::IdxSize"],["<section id=\"impl-Unsigned-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_traits/sign.rs.html#202\">source</a><a href=\"#impl-Unsigned-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/sign/trait.Unsigned.html\" title=\"trait num_traits::sign::Unsigned\">Unsigned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section>","Unsigned","polars::prelude::IdxSize"]],
"polars_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NumericNative-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/mod.rs.html#298-301\">source</a><a href=\"#impl-NumericNative-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_core/datatypes/trait.NumericNative.html\" title=\"trait polars_core::datatypes::NumericNative\">NumericNative</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.PolarsType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PolarsType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_core/datatypes/trait.NumericNative.html#associatedtype.PolarsType\" class=\"associatedtype\">PolarsType</a> = <a class=\"struct\" href=\"polars_core/datatypes/struct.UInt32Type.html\" title=\"struct polars_core::datatypes::UInt32Type\">UInt32Type</a></h4></section><section id=\"associatedtype.TrueDivPolarsType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TrueDivPolarsType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_core/datatypes/trait.NumericNative.html#associatedtype.TrueDivPolarsType\" class=\"associatedtype\">TrueDivPolarsType</a> = <a class=\"struct\" href=\"polars_core/datatypes/struct.Float64Type.html\" title=\"struct polars_core::datatypes::Float64Type\">Float64Type</a></h4></section></div></details>","NumericNative","polars_core::prelude::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TakeExtremum-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/frame/group_by/aggregations/mod.rs.html#283\">source</a><a href=\"#impl-TakeExtremum-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_core/frame/group_by/aggregations/trait.TakeExtremum.html\" title=\"trait polars_core::frame::group_by::aggregations::TakeExtremum\">TakeExtremum</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.take_min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/frame/group_by/aggregations/mod.rs.html#283\">source</a><a href=\"#method.take_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/frame/group_by/aggregations/trait.TakeExtremum.html#tymethod.take_min\" class=\"fn\">take_min</a>(self, other: Self) -&gt; Self</h4></section><section id=\"method.take_max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/frame/group_by/aggregations/mod.rs.html#283\">source</a><a href=\"#method.take_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/frame/group_by/aggregations/trait.TakeExtremum.html#tymethod.take_max\" class=\"fn\">take_max</a>(self, other: Self) -&gt; Self</h4></section></div></details>","TakeExtremum","polars_core::prelude::IdxSize"]],
"polars_plan":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Literal-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_plan/logical_plan/lit.rs.html#298\">source</a><a href=\"#impl-Literal-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_plan/logical_plan/trait.Literal.html\" title=\"trait polars_plan::logical_plan::Literal\">Literal</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_plan/logical_plan/lit.rs.html#298\">source</a><a href=\"#method.lit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_plan/logical_plan/trait.Literal.html#tymethod.lit\" class=\"fn\">lit</a>(self) -&gt; <a class=\"enum\" href=\"polars_plan/dsl/enum.Expr.html\" title=\"enum polars_plan::dsl::Expr\">Expr</a></h4></section></summary><div class='docblock'><a href=\"polars_plan/dsl/enum.Expr.html#variant.Literal\" title=\"variant polars_plan::dsl::Expr::Literal\">Literal</a> expression.</div></details></div></details>","Literal","polars_plan::logical_plan::options::FileCount"]],
"polars_utils":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsDiff-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/abs_diff.rs.html#48\">source</a><a href=\"#impl-AbsDiff-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/abs_diff/trait.AbsDiff.html\" title=\"trait polars_utils::abs_diff::AbsDiff\">AbsDiff</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Abs\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Abs\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_utils/abs_diff/trait.AbsDiff.html#associatedtype.Abs\" class=\"associatedtype\">Abs</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.max_abs_diff\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/abs_diff.rs.html#48\">source</a><a href=\"#method.max_abs_diff\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/abs_diff/trait.AbsDiff.html#tymethod.max_abs_diff\" class=\"fn\">max_abs_diff</a>() -&gt; Self::<a class=\"associatedtype\" href=\"polars_utils/abs_diff/trait.AbsDiff.html#associatedtype.Abs\" title=\"type polars_utils::abs_diff::AbsDiff::Abs\">Abs</a></h4></section><section id=\"method.abs_diff\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/abs_diff.rs.html#48\">source</a><a href=\"#method.abs_diff\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/abs_diff/trait.AbsDiff.html#tymethod.abs_diff\" class=\"fn\">abs_diff</a>(self, other: Self) -&gt; Self::<a class=\"associatedtype\" href=\"polars_utils/abs_diff/trait.AbsDiff.html#associatedtype.Abs\" title=\"type polars_utils::abs_diff::AbsDiff::Abs\">Abs</a></h4></section></div></details>","AbsDiff","polars_utils::index::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DirtyHash-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/hashing.rs.html#82\">source</a><a href=\"#impl-DirtyHash-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/hashing/trait.DirtyHash.html\" title=\"trait polars_utils::hashing::DirtyHash\">DirtyHash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.dirty_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/hashing.rs.html#82\">source</a><a href=\"#method.dirty_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/hashing/trait.DirtyHash.html#tymethod.dirty_hash\" class=\"fn\">dirty_hash</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a></h4></section></div></details>","DirtyHash","polars_utils::index::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FloorDivMod-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/floor_divmod.rs.html#66\">source</a><a href=\"#impl-FloorDivMod-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/floor_divmod/trait.FloorDivMod.html\" title=\"trait polars_utils::floor_divmod::FloorDivMod\">FloorDivMod</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.wrapping_floor_div_mod\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/floor_divmod.rs.html#66\">source</a><a href=\"#method.wrapping_floor_div_mod\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/floor_divmod/trait.FloorDivMod.html#tymethod.wrapping_floor_div_mod\" class=\"fn\">wrapping_floor_div_mod</a>(self, other: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.tuple.html\">(Self, Self)</a></h4></section></div></details>","FloorDivMod","polars_utils::index::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IsFloat-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/float.rs.html#39\">source</a><a href=\"#impl-IsFloat-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/float/trait.IsFloat.html\" title=\"trait polars_utils::float::IsFloat\">IsFloat</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_float\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/float.rs.html#4-6\">source</a><a href=\"#method.is_float\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/float/trait.IsFloat.html#method.is_float\" class=\"fn\">is_float</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/float.rs.html#8-10\">source</a><a href=\"#method.is_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/float/trait.IsFloat.html#method.is_f32\" class=\"fn\">is_f32</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/float.rs.html#12-14\">source</a><a href=\"#method.is_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/float/trait.IsFloat.html#method.is_f64\" class=\"fn\">is_f64</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/float.rs.html#17-22\">source</a><a href=\"#method.is_nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/float/trait.IsFloat.html#method.is_nan\" class=\"fn\">is_nan</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section><section id=\"method.is_finite\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/float.rs.html#24-29\">source</a><a href=\"#method.is_finite\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/float/trait.IsFloat.html#method.is_finite\" class=\"fn\">is_finite</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></div></details>","IsFloat","polars_utils::index::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IsNull-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/nulls.rs.html#55\">source</a><a href=\"#impl-IsNull-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/nulls/trait.IsNull.html\" title=\"trait polars_utils::nulls::IsNull\">IsNull</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.HAS_NULLS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/nulls.rs.html#55\">source</a><a href=\"#associatedconstant.HAS_NULLS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"polars_utils/nulls/trait.IsNull.html#associatedconstant.HAS_NULLS\" class=\"constant\">HAS_NULLS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a> = false</h4></section><section id=\"associatedtype.Inner\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Inner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_utils/nulls/trait.IsNull.html#associatedtype.Inner\" class=\"associatedtype\">Inner</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.is_null\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/nulls.rs.html#55\">source</a><a href=\"#method.is_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/nulls/trait.IsNull.html#tymethod.is_null\" class=\"fn\">is_null</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.unwrap_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/nulls.rs.html#55\">source</a><a href=\"#method.unwrap_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/nulls/trait.IsNull.html#tymethod.unwrap_inner\" class=\"fn\">unwrap_inner</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","IsNull","polars_utils::index::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MinMax-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/min_max.rs.html#76\">source</a><a href=\"#impl-MinMax-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/min_max/trait.MinMax.html\" title=\"trait polars_utils::min_max::MinMax\">MinMax</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.nan_min_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/min_max.rs.html#76\">source</a><a href=\"#method.nan_min_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/min_max/trait.MinMax.html#tymethod.nan_min_lt\" class=\"fn\">nan_min_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.nan_max_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/min_max.rs.html#76\">source</a><a href=\"#method.nan_max_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/min_max/trait.MinMax.html#tymethod.nan_max_lt\" class=\"fn\">nan_max_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.min_propagate_nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/min_max.rs.html#19-25\">source</a><a href=\"#method.min_propagate_nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/min_max/trait.MinMax.html#method.min_propagate_nan\" class=\"fn\">min_propagate_nan</a>(self, other: Self) -&gt; Self</h4></section><section id=\"method.max_propagate_nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/min_max.rs.html#28-34\">source</a><a href=\"#method.max_propagate_nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/min_max/trait.MinMax.html#method.max_propagate_nan\" class=\"fn\">max_propagate_nan</a>(self, other: Self) -&gt; Self</h4></section><section id=\"method.min_ignore_nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/min_max.rs.html#37-43\">source</a><a href=\"#method.min_ignore_nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/min_max/trait.MinMax.html#method.min_ignore_nan\" class=\"fn\">min_ignore_nan</a>(self, other: Self) -&gt; Self</h4></section><section id=\"method.max_ignore_nan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/min_max.rs.html#46-52\">source</a><a href=\"#method.max_ignore_nan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/min_max/trait.MinMax.html#method.max_ignore_nan\" class=\"fn\">max_ignore_nan</a>(self, other: Self) -&gt; Self</h4></section></div></details>","MinMax","polars_utils::index::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToIdx-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/index.rs.html#175\">source</a><a href=\"#impl-ToIdx-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/index/trait.ToIdx.html\" title=\"trait polars_utils::index::ToIdx\">ToIdx</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_idx\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/index.rs.html#175\">source</a><a href=\"#method.to_idx\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/index/trait.ToIdx.html#tymethod.to_idx\" class=\"fn\">to_idx</a>(self, _len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"type\" href=\"polars_utils/index/type.IdxSize.html\" title=\"type polars_utils::index::IdxSize\">IdxSize</a></h4></section></div></details>","ToIdx","polars_utils::index::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToTotalOrd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#505\">source</a><a href=\"#impl-ToTotalOrd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/total_ord/trait.ToTotalOrd.html\" title=\"trait polars_utils::total_ord::ToTotalOrd\">ToTotalOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.TotalOrdItem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TotalOrdItem\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_utils/total_ord/trait.ToTotalOrd.html#associatedtype.TotalOrdItem\" class=\"associatedtype\">TotalOrdItem</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"associatedtype.SourceItem\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SourceItem\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_utils/total_ord/trait.ToTotalOrd.html#associatedtype.SourceItem\" class=\"associatedtype\">SourceItem</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.to_total_ord\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#505\">source</a><a href=\"#method.to_total_ord\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.ToTotalOrd.html#tymethod.to_total_ord\" class=\"fn\">to_total_ord</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"polars_utils/total_ord/trait.ToTotalOrd.html#associatedtype.TotalOrdItem\" title=\"type polars_utils::total_ord::ToTotalOrd::TotalOrdItem\">TotalOrdItem</a></h4></section><section id=\"method.peel_total_ord\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#505\">source</a><a href=\"#method.peel_total_ord\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.ToTotalOrd.html#tymethod.peel_total_ord\" class=\"fn\">peel_total_ord</a>(ord_item: Self::<a class=\"associatedtype\" href=\"polars_utils/total_ord/trait.ToTotalOrd.html#associatedtype.TotalOrdItem\" title=\"type polars_utils::total_ord::ToTotalOrd::TotalOrdItem\">TotalOrdItem</a>) -&gt; Self::<a class=\"associatedtype\" href=\"polars_utils/total_ord/trait.ToTotalOrd.html#associatedtype.SourceItem\" title=\"type polars_utils::total_ord::ToTotalOrd::SourceItem\">SourceItem</a></h4></section></div></details>","ToTotalOrd","polars_utils::index::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TotalEq-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#impl-TotalEq-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/total_ord/trait.TotalEq.html\" title=\"trait polars_utils::total_ord::TotalEq\">TotalEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.tot_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#method.tot_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.TotalEq.html#tymethod.tot_eq\" class=\"fn\">tot_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.tot_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#method.tot_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.TotalEq.html#method.tot_ne\" class=\"fn\">tot_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","TotalEq","polars_utils::index::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TotalHash-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#impl-TotalHash-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/total_ord/trait.TotalHash.html\" title=\"trait polars_utils::total_ord::TotalHash\">TotalHash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.tot_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#method.tot_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.TotalHash.html#tymethod.tot_hash\" class=\"fn\">tot_hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section><section id=\"method.tot_hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#79-87\">source</a><a href=\"#method.tot_hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.TotalHash.html#method.tot_hash_slice\" class=\"fn\">tot_hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.79.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></div></details>","TotalHash","polars_utils::index::IdxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TotalOrd-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#impl-TotalOrd-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"polars_utils/total_ord/trait.TotalOrd.html\" title=\"trait polars_utils::total_ord::TotalOrd\">TotalOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.tot_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#method.tot_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.TotalOrd.html#tymethod.tot_cmp\" class=\"fn\">tot_cmp</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section><section id=\"method.tot_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#method.tot_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.TotalOrd.html#method.tot_lt\" class=\"fn\">tot_lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.tot_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#method.tot_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.TotalOrd.html#method.tot_gt\" class=\"fn\">tot_gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.tot_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#method.tot_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.TotalOrd.html#method.tot_le\" class=\"fn\">tot_le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.tot_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_utils/total_ord.rs.html#253\">source</a><a href=\"#method.tot_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_utils/total_ord/trait.TotalOrd.html#method.tot_ge\" class=\"fn\">tot_ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","TotalOrd","polars_utils::index::IdxSize"]],
"pyo3":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Element-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/pyo3/buffer.rs.html#689\">source</a><a href=\"#impl-Element-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"pyo3/buffer/trait.Element.html\" title=\"trait pyo3::buffer::Element\">Element</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_compatible_format\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/buffer.rs.html#689\">source</a><a href=\"#method.is_compatible_format\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"pyo3/buffer/trait.Element.html#tymethod.is_compatible_format\" class=\"fn\">is_compatible_format</a>(format: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.79.0/core/ffi/c_str/struct.CStr.html\" title=\"struct core::ffi::c_str::CStr\">CStr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Gets whether the element specified in the format string is potentially compatible.\nAlignment and size are checked separately from this function.</div></details></div></details>","Element","pyo3::ffi::PY_UINT32_T","pyo3::ffi::Py_UCS4"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPyObject%3C'py%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#152\">source</a><a href=\"#impl-FromPyObject%3C'py%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'py&gt; <a class=\"trait\" href=\"pyo3/conversion/trait.FromPyObject.html\" title=\"trait pyo3::conversion::FromPyObject\">FromPyObject</a>&lt;'py&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#152\">source</a><a href=\"#method.extract_bound\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"pyo3/conversion/trait.FromPyObject.html#method.extract_bound\" class=\"fn\">extract_bound</a>(obj: &amp;<a class=\"struct\" href=\"pyo3/prelude/struct.Bound.html\" title=\"struct pyo3::prelude::Bound\">Bound</a>&lt;'_, <a class=\"struct\" href=\"pyo3/types/struct.PyAny.html\" title=\"struct pyo3::types::PyAny\">PyAny</a>&gt;) -&gt; <a class=\"type\" href=\"pyo3/prelude/type.PyResult.html\" title=\"type pyo3::prelude::PyResult\">PyResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Extracts <code>Self</code> from the bound smart pointer <code>obj</code>. <a href=\"pyo3/conversion/trait.FromPyObject.html#method.extract_bound\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversion.rs.html#218-220\">source</a><a href=\"#method.extract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"pyo3/conversion/trait.FromPyObject.html#method.extract\" class=\"fn\">extract</a>(ob: &amp;'py <a class=\"struct\" href=\"pyo3/types/struct.PyAny.html\" title=\"struct pyo3::types::PyAny\">PyAny</a>) -&gt; <a class=\"type\" href=\"pyo3/prelude/type.PyResult.html\" title=\"type pyo3::prelude::PyResult\">PyResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Extracts <code>Self</code> from the source GIL Ref <code>obj</code>. <a href=\"pyo3/conversion/trait.FromPyObject.html#method.extract\">Read more</a></div></details></div></details>","FromPyObject<'py>","pyo3::ffi::PY_UINT32_T","pyo3::ffi::Py_UCS4"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoPy%3CPy%3CPyAny%3E%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#152\">source</a><a href=\"#impl-IntoPy%3CPy%3CPyAny%3E%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"pyo3/conversion/trait.IntoPy.html\" title=\"trait pyo3::conversion::IntoPy\">IntoPy</a>&lt;<a class=\"struct\" href=\"pyo3/prelude/struct.Py.html\" title=\"struct pyo3::prelude::Py\">Py</a>&lt;<a class=\"struct\" href=\"pyo3/types/struct.PyAny.html\" title=\"struct pyo3::types::PyAny\">PyAny</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_py\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#152\">source</a><a href=\"#method.into_py\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"pyo3/conversion/trait.IntoPy.html#tymethod.into_py\" class=\"fn\">into_py</a>(self, py: <a class=\"struct\" href=\"pyo3/marker/struct.Python.html\" title=\"struct pyo3::marker::Python\">Python</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"pyo3/prelude/type.PyObject.html\" title=\"type pyo3::prelude::PyObject\">PyObject</a></h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","IntoPy<Py<PyAny>>","pyo3::ffi::PY_UINT32_T","pyo3::ffi::Py_UCS4"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPyObject-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#152\">source</a><a href=\"#impl-ToPyObject-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"pyo3/conversion/trait.ToPyObject.html\" title=\"trait pyo3::conversion::ToPyObject\">ToPyObject</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_object\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pyo3/conversions/std/num.rs.html#152\">source</a><a href=\"#method.to_object\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"pyo3/conversion/trait.ToPyObject.html#tymethod.to_object\" class=\"fn\">to_object</a>(&amp;self, py: <a class=\"struct\" href=\"pyo3/marker/struct.Python.html\" title=\"struct pyo3::marker::Python\">Python</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"pyo3/prelude/type.PyObject.html\" title=\"type pyo3::prelude::PyObject\">PyObject</a></h4></section></summary><div class='docblock'>Converts self into a Python object.</div></details></div></details>","ToPyObject","pyo3::ffi::PY_UINT32_T","pyo3::ffi::Py_UCS4"]],
"pyo3_ffi":[],
"serde":[],
"ttf_parser":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromData-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#75-82\">source</a><a href=\"#impl-FromData-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ttf_parser/trait.FromData.html\" title=\"trait ttf_parser::FromData\">FromData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#76\">source</a><a href=\"#associatedconstant.SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"ttf_parser/trait.FromData.html#associatedconstant.SIZE\" class=\"constant\">SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.usize.html\">usize</a> = 4usize</h4></section></summary><div class='docblock'>Object’s raw data size. <a href=\"ttf_parser/trait.FromData.html#associatedconstant.SIZE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#79-81\">source</a><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ttf_parser/trait.FromData.html#tymethod.parse\" class=\"fn\">parse</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.79.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.79.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Parses an object from a raw data.</div></details></div></details>","FromData","ttf_parser::ggg::layout_table::VariationIndex"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()