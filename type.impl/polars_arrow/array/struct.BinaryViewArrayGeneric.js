(function() {var type_impls = {
"polars_arrow":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array-for-BinaryViewArrayGeneric%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#457-507\">source</a><a href=\"#impl-Array-for-BinaryViewArrayGeneric%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\">Array</a> for <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#458-460\">source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a></h4></section></summary><div class='docblock'>Converts itself to a reference of <a href=\"https://doc.rust-lang.org/1.80.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Any</code></a>, which enables downcasting to concrete types.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#462-464\">source</a><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a></h4></section></summary><div class='docblock'>Converts itself to a mutable reference of <a href=\"https://doc.rust-lang.org/1.80.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Any</code></a>, which enables mutable downcasting to concrete types.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#467-469\">source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The length of the <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a>. Every array has a length corresponding to the number of\nelements (slots).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_type\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#471-473\">source</a><a href=\"#method.data_type\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#tymethod.data_type\" class=\"fn\">data_type</a>(&amp;self) -&gt; &amp;<a class=\"enum\" href=\"polars_arrow/datatypes/enum.ArrowDataType.html\" title=\"enum polars_arrow::datatypes::ArrowDataType\">ArrowDataType</a></h4></section></summary><div class='docblock'>The <a href=\"polars_arrow/datatypes/enum.ArrowDataType.html\" title=\"enum polars_arrow::datatypes::ArrowDataType\"><code>ArrowDataType</code></a> of the <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a>. In combination with <a href=\"polars_arrow/array/trait.Array.html#tymethod.as_any\" title=\"method polars_arrow::array::Array::as_any\"><code>Array::as_any</code></a>, this can be\nused to downcast trait objects (<code>dyn Array</code>) to concrete arrays.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#475-477\">source</a><a href=\"#method.validity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#tymethod.validity\" class=\"fn\">validity</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.Bitmap.html\" title=\"struct polars_arrow::bitmap::Bitmap\">Bitmap</a>&gt;</h4></section></summary><div class='docblock'>The validity of the <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a>: every array has an optional <a href=\"polars_arrow/bitmap/struct.Bitmap.html\" title=\"struct polars_arrow::bitmap::Bitmap\"><code>Bitmap</code></a> that, when available\nspecifies whether the array slot is valid or not (null).\nWhen the validity is <a href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, all slots are valid.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#479-485\">source</a><a href=\"#method.slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#tymethod.slice\" class=\"fn\">slice</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Slices this <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a>. <a href=\"polars_arrow/array/trait.Array.html#tymethod.slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#487-496\">source</a><a href=\"#method.slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"polars_arrow/array/trait.Array.html#tymethod.slice_unchecked\" class=\"fn\">slice_unchecked</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Slices the <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a>. <a href=\"polars_arrow/array/trait.Array.html#tymethod.slice_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_validity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#498-502\">source</a><a href=\"#method.with_validity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#tymethod.with_validity\" class=\"fn\">with_validity</a>(&amp;self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.Bitmap.html\" title=\"struct polars_arrow::bitmap::Bitmap\">Bitmap</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\">Array</a>&gt;</h4></section></summary><div class='docblock'>Clones this <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a> with a new new assigned bitmap. <a href=\"polars_arrow/array/trait.Array.html#tymethod.with_validity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#504-506\">source</a><a href=\"#method.to_boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#tymethod.to_boxed\" class=\"fn\">to_boxed</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\">Array</a>&gt;</h4></section></summary><div class='docblock'>Clone a <code>&amp;dyn Array</code> to an owned <code>Box&lt;dyn Array&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/mod.rs.html#41-43\">source</a><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#method.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>whether the array is empty</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.null_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/mod.rs.html#58-66\">source</a><a href=\"#method.null_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#method.null_count\" class=\"fn\">null_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of null slots on this <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a>. <a href=\"polars_arrow/array/trait.Array.html#method.null_count\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_null\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/mod.rs.html#72-75\">source</a><a href=\"#method.is_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#method.is_null\" class=\"fn\">is_null</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether slot <code>i</code> is null. <a href=\"polars_arrow/array/trait.Array.html#method.is_null\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_null_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/mod.rs.html#82-87\">source</a><a href=\"#method.is_null_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"polars_arrow/array/trait.Array.html#method.is_null_unchecked\" class=\"fn\">is_null_unchecked</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether slot <code>i</code> is null. <a href=\"polars_arrow/array/trait.Array.html#method.is_null_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/mod.rs.html#93-95\">source</a><a href=\"#method.is_valid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#method.is_valid\" class=\"fn\">is_valid</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether slot <code>i</code> is valid. <a href=\"polars_arrow/array/trait.Array.html#method.is_valid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/mod.rs.html#118-122\">source</a><a href=\"#method.sliced\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.Array.html#method.sliced\" class=\"fn\">sliced</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\">Array</a>&gt;</h4></section></summary><div class='docblock'>Returns a slice of this <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a>. <a href=\"polars_arrow/array/trait.Array.html#method.sliced\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/mod.rs.html#132-136\">source</a><a href=\"#method.sliced_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"polars_arrow/array/trait.Array.html#method.sliced_unchecked\" class=\"fn\">sliced_unchecked</a>(\n    &amp;self,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\">Array</a>&gt;</h4></section></summary><div class='docblock'>Returns a slice of this <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a>. <a href=\"polars_arrow/array/trait.Array.html#method.sliced_unchecked\">Read more</a></div></details></div></details>","Array","polars_arrow::array::binview::BinaryViewArray","polars_arrow::array::binview::Utf8ViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayAccessor%3C'a%3E-for-BinaryViewArrayGeneric%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/iterator.rs.html#6-18\">source</a><a href=\"#impl-ArrayAccessor%3C'a%3E-for-BinaryViewArrayGeneric%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html\" title=\"trait polars_arrow::array::iterator::ArrayAccessor\">ArrayAccessor</a>&lt;'a&gt; for <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;'a T</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/iterator.rs.html#10-12\">source</a><a href=\"#method.value_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html#tymethod.value_unchecked\" class=\"fn\">value_unchecked</a>(&amp;'a self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html#associatedtype.Item\" title=\"type polars_arrow::array::iterator::ArrayAccessor::Item\">Item</a></h4></section></summary><div class='docblock'>Safety <a href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html#tymethod.value_unchecked\">Read more</a></div></details><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/iterator.rs.html#15-17\">source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","ArrayAccessor<'a>","polars_arrow::array::binview::BinaryViewArray","polars_arrow::array::binview::Utf8ViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BinaryViewArrayGeneric%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#146-410\">source</a><a href=\"#impl-BinaryViewArrayGeneric%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#151-168\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(\n    data_type: <a class=\"enum\" href=\"polars_arrow/datatypes/enum.ArrowDataType.html\" title=\"enum polars_arrow::datatypes::ArrowDataType\">ArrowDataType</a>,\n    views: <a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"struct\" href=\"polars_arrow/array/struct.View.html\" title=\"struct polars_arrow::array::View\">View</a>&gt;,\n    buffers: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt;]&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.Bitmap.html\" title=\"struct polars_arrow::bitmap::Bitmap\">Bitmap</a>&gt;,\n    total_bytes_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    total_buffer_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The caller must ensure</p>\n<ul>\n<li>the data is valid utf8 (if required)</li>\n<li>The offsets match the buffers.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked_unknown_md\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#174-192\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.new_unchecked_unknown_md\" class=\"fn\">new_unchecked_unknown_md</a>(\n    data_type: <a class=\"enum\" href=\"polars_arrow/datatypes/enum.ArrowDataType.html\" title=\"enum polars_arrow::datatypes::ArrowDataType\">ArrowDataType</a>,\n    views: <a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"struct\" href=\"polars_arrow/array/struct.View.html\" title=\"struct polars_arrow::array::View\">View</a>&gt;,\n    buffers: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt;]&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.Bitmap.html\" title=\"struct polars_arrow::bitmap::Bitmap\">Bitmap</a>&gt;,\n    total_buffer_len: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt;,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new BinaryViewArray but initialize a statistics compute.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The caller must ensure the invariants</p>\n</div></details><section id=\"method.data_buffers\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#194-196\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.data_buffers\" class=\"fn\">data_buffers</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt;]&gt;</h4></section><section id=\"method.variadic_buffer_lengths\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#198-200\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.variadic_buffer_lengths\" class=\"fn\">variadic_buffer_lengths</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.i64.html\">i64</a>&gt;</h4></section><section id=\"method.views\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#202-204\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.views\" class=\"fn\">views</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"struct\" href=\"polars_arrow/array/struct.View.html\" title=\"struct polars_arrow::array::View\">View</a>&gt;</h4></section><section id=\"method.try_new\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#206-227\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.try_new\" class=\"fn\">try_new</a>(\n    data_type: <a class=\"enum\" href=\"polars_arrow/datatypes/enum.ArrowDataType.html\" title=\"enum polars_arrow::datatypes::ArrowDataType\">ArrowDataType</a>,\n    views: <a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"struct\" href=\"polars_arrow/array/struct.View.html\" title=\"struct polars_arrow::array::View\">View</a>&gt;,\n    buffers: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;[<a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt;]&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.Bitmap.html\" title=\"struct polars_arrow::bitmap::Bitmap\">Bitmap</a>&gt;,\n) -&gt; <a class=\"type\" href=\"polars_arrow/legacy/error/type.PolarsResult.html\" title=\"type polars_arrow::legacy::error::PolarsResult\">PolarsResult</a>&lt;Self&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#231-233\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.new_empty\" class=\"fn\">new_empty</a>(data_type: <a class=\"enum\" href=\"polars_arrow/datatypes/enum.ArrowDataType.html\" title=\"enum polars_arrow::datatypes::ArrowDataType\">ArrowDataType</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates an empty <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\"><code>BinaryViewArrayGeneric</code></a>, i.e. whose <code>.len</code> is zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_null\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#237-249\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.new_null\" class=\"fn\">new_null</a>(data_type: <a class=\"enum\" href=\"polars_arrow/datatypes/enum.ArrowDataType.html\" title=\"enum polars_arrow::datatypes::ArrowDataType\">ArrowDataType</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a new null <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\"><code>BinaryViewArrayGeneric</code></a> of <code>length</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#255-258\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.value\" class=\"fn\">value</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns the element at index <code>i</code></p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>iff <code>i &gt;= self.len()</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#265-288\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.value_unchecked\" class=\"fn\">value_unchecked</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns the element at index <code>i</code></p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<p>Assumes that the <code>i &lt; self.len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#291-293\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.iter\" class=\"fn\">iter</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"polars_arrow/bitmap/utils/enum.ZipValidity.html\" title=\"enum polars_arrow::bitmap::utils::ZipValidity\">ZipValidity</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;T</a>, <a class=\"struct\" href=\"polars_arrow/array/iterator/struct.ArrayValuesIter.html\" title=\"struct polars_arrow::array::iterator::ArrayValuesIter\">ArrayValuesIter</a>&lt;'_, <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;&gt;, <a class=\"struct\" href=\"polars_arrow/bitmap/utils/struct.BitmapIter.html\" title=\"struct polars_arrow::bitmap::utils::BitmapIter\">BitmapIter</a>&lt;'_&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ZipValidity&lt;&amp;T, ArrayValuesIter&lt;&#39;_, BinaryViewArrayGeneric&lt;T&gt;&gt;, BitmapIter&lt;&#39;_&gt;&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator of <code>Option&lt;&amp;T&gt;</code> over every element of this array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#296-298\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.values_iter\" class=\"fn\">values_iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"polars_arrow/array/iterator/struct.ArrayValuesIter.html\" title=\"struct polars_arrow::array::iterator::ArrayValuesIter\">ArrayValuesIter</a>&lt;'_, <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ArrayValuesIter&lt;&#39;_, BinaryViewArrayGeneric&lt;T&gt;&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator of <code>&amp;[u8]</code> over every element of this array, ignoring the validity</p>\n</div></details><section id=\"method.len_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#300-302\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.len_iter\" class=\"fn\">len_iter</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>&gt; + '_</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.non_null_values_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#305-307\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.non_null_values_iter\" class=\"fn\">non_null_values_iter</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"polars_arrow/array/iterator/struct.NonNullValuesIter.html\" title=\"struct polars_arrow::array::iterator::NonNullValuesIter\">NonNullValuesIter</a>&lt;'_, <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"NonNullValuesIter&lt;&#39;_, BinaryViewArrayGeneric&lt;T&gt;&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the non-null values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.non_null_views_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#310-312\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.non_null_views_iter\" class=\"fn\">non_null_views_iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"polars_arrow/array/iterator/struct.NonNullValuesIter.html\" title=\"struct polars_arrow::array::iterator::NonNullValuesIter\">NonNullValuesIter</a>&lt;'_, <a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"struct\" href=\"polars_arrow/array/struct.View.html\" title=\"struct polars_arrow::array::View\">View</a>&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"NonNullValuesIter&lt;&#39;_, Buffer&lt;View&gt;&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the non-null values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#314\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.sliced\" class=\"fn\">sliced</a>(self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns this array sliced.</p>\n<h5 id=\"implementation\"><a class=\"doc-anchor\" href=\"#implementation\">§</a>Implementation</h5>\n<p>This function is <code>O(1)</code>.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>iff <code>offset + length &gt; self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#314\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.sliced_unchecked\" class=\"fn\">sliced_unchecked</a>(self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns this array sliced.</p>\n<h5 id=\"implementation-1\"><a class=\"doc-anchor\" href=\"#implementation-1\">§</a>Implementation</h5>\n<p>This function is <code>O(1)</code>.</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">§</a>Safety</h5>\n<p>The caller must ensure that <code>offset + length &lt;= self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_validity\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#315\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.with_validity\" class=\"fn\">with_validity</a>(self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.Bitmap.html\" title=\"struct polars_arrow::bitmap::Bitmap\">Bitmap</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns this array with a new validity.</p>\n<h5 id=\"panic\"><a class=\"doc-anchor\" href=\"#panic\">§</a>Panic</h5>\n<p>Panics iff <code>validity.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_validity\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#315\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.set_validity\" class=\"fn\">set_validity</a>(&amp;mut self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.Bitmap.html\" title=\"struct polars_arrow::bitmap::Bitmap\">Bitmap</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Sets the validity of this array.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>This function panics iff <code>values.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_validity\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#315\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.take_validity\" class=\"fn\">take_validity</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.Bitmap.html\" title=\"struct polars_arrow::bitmap::Bitmap\">Bitmap</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Takes the validity of this array, leaving it without a validity mask.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#316\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.boxed\" class=\"fn\">boxed</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\">Array</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Boxes this array into a <a href=\"https://doc.rust-lang.org/1.80.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\"><code>Box&lt;dyn Array&gt;</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arced\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#316\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.arced\" class=\"fn\">arced</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;dyn <a class=\"trait\" href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\">Array</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Arcs this array into a <a href=\"https://doc.rust-lang.org/1.80.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\"><code>std::sync::Arc&lt;dyn Array&gt;</code></a>.</p>\n</div></details><section id=\"method.from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#318-323\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.from_slice\" class=\"fn\">from_slice</a>&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;S&gt;]&gt;&gt;(slice: P) -&gt; Self</h4></section><section id=\"method.from_slice_values\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#325-329\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.from_slice_values\" class=\"fn\">from_slice_values</a>&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[S]</a>&gt;&gt;(slice: P) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_bytes_len\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#332-341\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.total_bytes_len\" class=\"fn\">total_bytes_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Get the total length of bytes that it would take to concatenate all binary/str values in this array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_buffer_len\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#344-346\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.total_buffer_len\" class=\"fn\">total_buffer_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Get the length of bytes that are stored in the variadic buffers.</p>\n</div></details><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#349-351\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.gc\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#354-365\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.gc\" class=\"fn\">gc</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Garbage collect</p>\n</div></details><section id=\"method.is_sliced\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#367-369\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.is_sliced\" class=\"fn\">is_sliced</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.maybe_gc\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#371-394\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.maybe_gc\" class=\"fn\">maybe_gc</a>(self) -&gt; Self</h4></section><section id=\"method.make_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#396-409\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html#tymethod.make_mut\" class=\"fn\">make_mut</a>(self) -&gt; <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h4></section></div></details>",0,"polars_arrow::array::binview::BinaryViewArray","polars_arrow::array::binview::Utf8ViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BinaryViewArrayGeneric%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#127-139\">source</a><a href=\"#impl-Clone-for-BinaryViewArrayGeneric%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#128-138\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polars_arrow::array::binview::BinaryViewArray","polars_arrow::array::binview::Utf8ViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrowableBinaryViewArray%3C'a,+T%3E%3E-for-BinaryViewArrayGeneric%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/growable/binview.rs.html#209-213\">source</a><a href=\"#impl-From%3CGrowableBinaryViewArray%3C'a,+T%3E%3E-for-BinaryViewArrayGeneric%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"polars_arrow/array/growable/struct.GrowableBinaryViewArray.html\" title=\"struct polars_arrow::array::growable::GrowableBinaryViewArray\">GrowableBinaryViewArray</a>&lt;'a, T&gt;&gt; for <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/growable/binview.rs.html#210-212\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: <a class=\"struct\" href=\"polars_arrow/array/growable/struct.GrowableBinaryViewArray.html\" title=\"struct polars_arrow::array::growable::GrowableBinaryViewArray\">GrowableBinaryViewArray</a>&lt;'a, T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrowableBinaryViewArray<'a, T>>","polars_arrow::array::binview::BinaryViewArray","polars_arrow::array::binview::Utf8ViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMutableBinaryViewArray%3CT%3E%3E-for-BinaryViewArrayGeneric%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#59-73\">source</a><a href=\"#impl-From%3CMutableBinaryViewArray%3CT%3E%3E-for-BinaryViewArrayGeneric%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#60-72\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MutableBinaryViewArray<T>>","polars_arrow::array::binview::BinaryViewArray","polars_arrow::array::binview::Utf8ViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-BinaryViewArrayGeneric%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#121-125\">source</a><a href=\"#impl-PartialEq-for-BinaryViewArrayGeneric%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#122-124\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","polars_arrow::array::binview::BinaryViewArray","polars_arrow::array::binview::Utf8ViewArray"],["<section id=\"impl-Send-for-BinaryViewArrayGeneric%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#141\">source</a><a href=\"#impl-Send-for-BinaryViewArrayGeneric%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;</h3></section>","Send","polars_arrow::array::binview::BinaryViewArray","polars_arrow::array::binview::Utf8ViewArray"],["<section id=\"impl-Sync-for-BinaryViewArrayGeneric%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mod.rs.html#142\">source</a><a href=\"#impl-Sync-for-BinaryViewArrayGeneric%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;</h3></section>","Sync","polars_arrow::array::binview::BinaryViewArray","polars_arrow::array::binview::Utf8ViewArray"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()