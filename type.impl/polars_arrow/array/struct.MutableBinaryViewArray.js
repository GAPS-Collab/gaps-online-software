(function() {var type_impls = {
"polars_arrow":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayAccessor%3C'a%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/iterator.rs.html#32-44\">source</a><a href=\"#impl-ArrayAccessor%3C'a%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html\" title=\"trait polars_arrow::array::iterator::ArrayAccessor\">ArrayAccessor</a>&lt;'a&gt; for <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;'a T</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/iterator.rs.html#36-38\">source</a><a href=\"#method.value_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html#tymethod.value_unchecked\" class=\"fn\">value_unchecked</a>(&amp;'a self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html#associatedtype.Item\" title=\"type polars_arrow::array::iterator::ArrayAccessor::Item\">Item</a></h4></section></summary><div class='docblock'>Safety <a href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html#tymethod.value_unchecked\">Read more</a></div></details><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/iterator.rs.html#41-43\">source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/iterator/trait.ArrayAccessor.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","ArrayAccessor<'a>","polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#33-45\">source</a><a href=\"#impl-Clone-for-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#34-44\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#47-51\">source</a><a href=\"#impl-Debug-for-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#48-50\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#53-57\">source</a><a href=\"#impl-Default-for-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#54-56\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3COption%3CP%3E%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#399-404\">source</a><a href=\"#impl-Extend%3COption%3CP%3E%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;&gt; for <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#401-403\">source</a><a href=\"#method.extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;&gt;&gt;(&amp;mut self, iter: I)</h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.Extend.html#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#453\">source</a><a href=\"#method.extend_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.80.0/src/core/iter/traits/collect.rs.html#461\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend<Option<P>>","polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3COption%3CP%3E%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#406-411\">source</a><a href=\"#impl-FromIterator%3COption%3CP%3E%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;&gt; for <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#408-410\">source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<Option<P>>","polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MutableArray-for-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#413-451\">source</a><a href=\"#impl-MutableArray-for-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"polars_arrow/array/trait.MutableArray.html\" title=\"trait polars_arrow::array::MutableArray\">MutableArray</a> for <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_type\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#414-416\">source</a><a href=\"#method.data_type\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#tymethod.data_type\" class=\"fn\">data_type</a>(&amp;self) -&gt; &amp;<a class=\"enum\" href=\"polars_arrow/datatypes/enum.ArrowDataType.html\" title=\"enum polars_arrow::datatypes::ArrowDataType\">ArrowDataType</a></h4></section></summary><div class='docblock'>The <a href=\"polars_arrow/datatypes/enum.ArrowDataType.html\" title=\"enum polars_arrow::datatypes::ArrowDataType\"><code>ArrowDataType</code></a> of the array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#418-420\">source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The length of the array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#422-424\">source</a><a href=\"#method.validity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#tymethod.validity\" class=\"fn\">validity</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.MutableBitmap.html\" title=\"struct polars_arrow::bitmap::MutableBitmap\">MutableBitmap</a>&gt;</h4></section></summary><div class='docblock'>The optional validity of the array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_box\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#426-430\">source</a><a href=\"#method.as_box\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#tymethod.as_box\" class=\"fn\">as_box</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\">Array</a>&gt;</h4></section></summary><div class='docblock'>Convert itself to an (immutable) <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#432-434\">source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a></h4></section></summary><div class='docblock'>Convert to <code>Any</code>, to enable dynamic casting.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#436-438\">source</a><a href=\"#method.as_mut_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#tymethod.as_mut_any\" class=\"fn\">as_mut_any</a>(&amp;mut self) -&gt; &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a></h4></section></summary><div class='docblock'>Convert to mutable <code>Any</code>, to enable dynamic casting.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_null\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#440-442\">source</a><a href=\"#method.push_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#tymethod.push_null\" class=\"fn\">push_null</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Adds a new null element to the array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#444-446\">source</a><a href=\"#method.reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Reserves additional slots to its capacity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#448-450\">source</a><a href=\"#method.shrink_to_fit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#tymethod.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Shrink the array to fit its length.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/mod.rs.html#161-163\">source</a><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#method.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether the array is empty.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_arc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/mod.rs.html#175-177\">source</a><a href=\"#method.as_arc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#method.as_arc\" class=\"fn\">as_arc</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;dyn <a class=\"trait\" href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\">Array</a>&gt;</h4></section></summary><div class='docblock'>Convert itself to an (immutable) atomically reference counted <a href=\"polars_arrow/array/trait.Array.html\" title=\"trait polars_arrow::array::Array\"><code>Array</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/mod.rs.html#192-197\">source</a><a href=\"#method.is_valid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.MutableArray.html#method.is_valid\" class=\"fn\">is_valid</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether <code>index</code> is valid / set. <a href=\"polars_arrow/array/trait.MutableArray.html#method.is_valid\">Read more</a></div></details></div></details>","MutableArray","polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MutableBinaryViewArray%3C%5Bu8%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#379-397\">source</a><a href=\"#impl-MutableBinaryViewArray%3C%5Bu8%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>]&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.validate_utf8\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#380-396\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.validate_utf8\" class=\"fn\">validate_utf8</a>(\n    &amp;mut self,\n    buffer_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    views_offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"type\" href=\"polars_arrow/legacy/error/type.PolarsResult.html\" title=\"type polars_arrow::legacy::error::PolarsResult\">PolarsResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>",0,"polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#75-377\">source</a><a href=\"#impl-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#76-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section><section id=\"method.with_capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#80-90\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section><section id=\"method.views_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#93-95\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.views_mut\" class=\"fn\">views_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"polars_arrow/array/struct.View.html\" title=\"struct polars_arrow::array::View\">View</a>&gt;</h4></section><section id=\"method.views\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#98-100\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.views\" class=\"fn\">views</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"polars_arrow/array/struct.View.html\" title=\"struct polars_arrow::array::View\">View</a>]</h4></section><section id=\"method.completed_buffers\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#103-105\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.completed_buffers\" class=\"fn\">completed_buffers</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt;]</h4></section><section id=\"method.validity\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#107-109\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.validity\" class=\"fn\">validity</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"polars_arrow/bitmap/struct.MutableBitmap.html\" title=\"struct polars_arrow::bitmap::MutableBitmap\">MutableBitmap</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#112-114\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Reserves <code>additional</code> elements and <code>additional_buffer</code> on the buffer.</p>\n</div></details><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#117-119\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.capacity\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#122-124\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_view\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#139-153\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.push_view\" class=\"fn\">push_view</a>(&amp;mut self, v: <a class=\"struct\" href=\"polars_arrow/array/struct.View.html\" title=\"struct polars_arrow::array::View\">View</a>, buffers: &amp;[<a class=\"struct\" href=\"polars_arrow/buffer/struct.Buffer.html\" title=\"struct polars_arrow::buffer::Buffer\">Buffer</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt;])</h4></section></summary><div class=\"docblock\"><h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<ul>\n<li>caller must allocate enough capacity</li>\n<li>caller must ensure the view and buffers match.</li>\n</ul>\n</div></details><section id=\"method.push_value_ignore_validity\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#155-188\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.push_value_ignore_validity\" class=\"fn\">push_value_ignore_validity</a>&lt;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;&gt;(&amp;mut self, value: V)</h4></section><section id=\"method.push_value\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#190-195\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.push_value\" class=\"fn\">push_value</a>&lt;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;&gt;(&amp;mut self, value: V)</h4></section><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#197-203\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.push\" class=\"fn\">push</a>&lt;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;&gt;(&amp;mut self, value: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;)</h4></section><section id=\"method.push_null\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#205-211\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.push_null\" class=\"fn\">push_null</a>(&amp;mut self)</h4></section><section id=\"method.extend_null\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#213-222\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.extend_null\" class=\"fn\">extend_null</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>)</h4></section><section id=\"method.extend_constant\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#224-244\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.extend_constant\" class=\"fn\">extend_constant</a>&lt;V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;&gt;(\n    &amp;mut self,\n    additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    value: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;,\n)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_validity\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.with_validity\" class=\"fn\">with_validity</a>(self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.MutableBitmap.html\" title=\"struct polars_arrow::bitmap::MutableBitmap\">MutableBitmap</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns this array with a new validity.</p>\n<h5 id=\"panic\"><a class=\"doc-anchor\" href=\"#panic\">§</a>Panic</h5>\n<p>Panics iff <code>validity.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_validity\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.set_validity\" class=\"fn\">set_validity</a>(&amp;mut self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"polars_arrow/bitmap/struct.MutableBitmap.html\" title=\"struct polars_arrow::bitmap::MutableBitmap\">MutableBitmap</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Sets the validity of this array.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>This function panics iff <code>values.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_validity\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#246\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.apply_validity\" class=\"fn\">apply_validity</a>&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"struct\" href=\"polars_arrow/bitmap/struct.MutableBitmap.html\" title=\"struct polars_arrow::bitmap::MutableBitmap\">MutableBitmap</a>) -&gt; <a class=\"struct\" href=\"polars_arrow/bitmap/struct.MutableBitmap.html\" title=\"struct polars_arrow::bitmap::MutableBitmap\">MutableBitmap</a>&gt;(\n    &amp;mut self,\n    f: F,\n)</h4></section></summary><div class=\"docblock\"><p>Applies a function <code>f</code> to the validity of this array.</p>\n<p>This is an API to leverage clone-on-write</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>This function panics if the function <code>f</code> modifies the length of the [<code>Bitmap</code>].</p>\n</div></details><section id=\"method.extend_values\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#249-258\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.extend_values\" class=\"fn\">extend_values</a>&lt;I, P&gt;(&amp;mut self, iterator: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = P&gt;,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;,</div></h4></section><section id=\"method.extend_trusted_len_values\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#261-267\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.extend_trusted_len_values\" class=\"fn\">extend_trusted_len_values</a>&lt;I, P&gt;(&amp;mut self, iterator: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"polars_arrow/trusted_len/trait.TrustedLen.html\" title=\"trait polars_arrow::trusted_len::TrustedLen\">TrustedLen</a>&lt;Item = P&gt;,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;,</div></h4></section><section id=\"method.extend\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#270-279\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.extend\" class=\"fn\">extend</a>&lt;I, P&gt;(&amp;mut self, iterator: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;&gt;,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;,</div></h4></section><section id=\"method.extend_trusted_len\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#282-288\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.extend_trusted_len\" class=\"fn\">extend_trusted_len</a>&lt;I, P&gt;(&amp;mut self, iterator: I)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"polars_arrow/trusted_len/trait.TrustedLen.html\" title=\"trait polars_arrow::trusted_len::TrustedLen\">TrustedLen</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;&gt;,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;,</div></h4></section><section id=\"method.from_iterator\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#291-299\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.from_iterator\" class=\"fn\">from_iterator</a>&lt;I, P&gt;(iterator: I) -&gt; Self<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;&gt;,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;,</div></h4></section><section id=\"method.from_values_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#301-309\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.from_values_iter\" class=\"fn\">from_values_iter</a>&lt;I, P&gt;(iterator: I) -&gt; Self<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = P&gt;,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;,</div></h4></section><section id=\"method.from\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#311-313\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.from\" class=\"fn\">from</a>&lt;S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;S&gt;]&gt;&gt;(slice: P) -&gt; Self</h4></section><section id=\"method.freeze\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#326-328\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.freeze\" class=\"fn\">freeze</a>(self) -&gt; <a class=\"struct\" href=\"polars_arrow/array/struct.BinaryViewArrayGeneric.html\" title=\"struct polars_arrow::array::BinaryViewArrayGeneric\">BinaryViewArrayGeneric</a>&lt;T&gt;</h4></section><section id=\"method.value\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#331-334\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.value\" class=\"fn\">value</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;T</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#341-371\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.value_unchecked\" class=\"fn\">value_unchecked</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Returns the element at index <code>i</code></p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>Assumes that the <code>i &lt; self.len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#374-376\">source</a><h4 class=\"code-header\">pub fn <a href=\"polars_arrow/array/struct.MutableBinaryViewArray.html#tymethod.values_iter\" class=\"fn\">values_iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"polars_arrow/array/iterator/struct.ArrayValuesIter.html\" title=\"struct polars_arrow::array::iterator::ArrayValuesIter\">ArrayValuesIter</a>&lt;'_, <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ArrayValuesIter&lt;&#39;_, MutableBinaryViewArray&lt;T&gt;&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator of <code>&amp;[u8]</code> over every element of this array, ignoring the validity</p>\n</div></details></div></details>",0,"polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pushable%3C%26T%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/pushable.rs.html#144-186\">source</a><a href=\"#impl-Pushable%3C%26T%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"polars_arrow/pushable/trait.Pushable.html\" title=\"trait polars_arrow::pushable::Pushable\">Pushable</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;T</a>&gt; for <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/pushable.rs.html#146-148\">source</a><a href=\"#method.reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/pushable/trait.Pushable.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>)</h4></section><section id=\"method.push\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/pushable.rs.html#151-153\">source</a><a href=\"#method.push\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/pushable/trait.Pushable.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;T</a>)</h4></section><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/pushable.rs.html#156-158\">source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/pushable/trait.Pushable.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.push_null\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/pushable.rs.html#160-162\">source</a><a href=\"#method.push_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/pushable/trait.Pushable.html#tymethod.push_null\" class=\"fn\">push_null</a>(&amp;mut self)</h4></section><section id=\"method.extend_constant\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/pushable.rs.html#164-180\">source</a><a href=\"#method.extend_constant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/pushable/trait.Pushable.html#tymethod.extend_constant\" class=\"fn\">extend_constant</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;T</a>)</h4></section><section id=\"method.extend_null_constant\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/pushable.rs.html#183-185\">source</a><a href=\"#method.extend_null_constant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/pushable/trait.Pushable.html#tymethod.extend_null_constant\" class=\"fn\">extend_null_constant</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>)</h4></section><section id=\"method.with_capacity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/pushable.rs.html#8-12\">source</a><a href=\"#method.with_capacity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/pushable/trait.Pushable.html#method.with_capacity\" class=\"fn\">with_capacity</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></div></details>","Pushable<&T>","polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryExtend%3COption%3CP%3E%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#453-460\">source</a><a href=\"#impl-TryExtend%3COption%3CP%3E%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"polars_arrow/array/trait.TryExtend.html\" title=\"trait polars_arrow::array::TryExtend\">TryExtend</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;&gt; for <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#456-459\">source</a><a href=\"#method.try_extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.TryExtend.html#tymethod.try_extend\" class=\"fn\">try_extend</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;&gt;&gt;(\n    &amp;mut self,\n    iter: I,\n) -&gt; <a class=\"type\" href=\"polars_arrow/legacy/error/type.PolarsResult.html\" title=\"type polars_arrow::legacy::error::PolarsResult\">PolarsResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>This is infallible and is implemented for consistency with all other types</p>\n</div></details></div></details>","TryExtend<Option<P>>","polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryPush%3COption%3CP%3E%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#462-469\">source</a><a href=\"#impl-TryPush%3COption%3CP%3E%3E-for-MutableBinaryViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_arrow/array/trait.ViewType.html\" title=\"trait polars_arrow::array::ViewType\">ViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"polars_arrow/array/trait.TryPush.html\" title=\"trait polars_arrow::array::TryPush\">TryPush</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;&gt; for <a class=\"struct\" href=\"polars_arrow/array/struct.MutableBinaryViewArray.html\" title=\"struct polars_arrow::array::MutableBinaryViewArray\">MutableBinaryViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_push\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_arrow/array/binview/mutable.rs.html#465-468\">source</a><a href=\"#method.try_push\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_arrow/array/trait.TryPush.html#tymethod.try_push\" class=\"fn\">try_push</a>(&amp;mut self, item: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;P&gt;) -&gt; <a class=\"type\" href=\"polars_arrow/legacy/error/type.PolarsResult.html\" title=\"type polars_arrow::legacy::error::PolarsResult\">PolarsResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>This is infallible and is implemented for consistency with all other types</p>\n</div></details></div></details>","TryPush<Option<P>>","polars_arrow::array::binview::MutablePlString","polars_arrow::array::binview::MutablePlBinary"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()