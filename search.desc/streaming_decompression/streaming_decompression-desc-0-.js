searchState.loadedDescShard("streaming_decompression", 0, "This crate contains a <code>FallibleStreamingIterator</code> optimized …\nTrait denoting a compressed item. Use <code>is_compressed</code> to …\nTrait denoting an uncompressed item. Use <code>buffer_mut</code> to …\nA <code>FallibleStreamingIterator</code> that decompresses items of …\nThe error type of iteration.\nA fallible, streaming iterator.\nThe type being iterated over.\nAdvances the iterator to the next position.\nDetermines if all elements of the iterator satisfy a …\nDetermines if any elements of the iterator satisfy a …\nBorrows an iterator, rather than consuming it.\nReturns the number of remaining elements in the iterator.\nReturns an iterator which filters elements by a predicate.\nReturns the first element of the iterator which satisfies …\nCalls a closure on each element of an iterator.\nReturns the argument unchanged.\nReturns an iterator which is well-behaved at the beginning …\nReturns the current element.\nCalls <code>U::from(self)</code>.\nReturns its internal buffer, consuming itself.\nReturns an iterator which applies a transform to elements.\nReturns an iterator that applies a transform to errors.\nReturns an iterator which applies a transform to elements.\nReturns a new <code>Decompressor</code>.\nAdvances the iterator, returning the next element.\nReturns the <code>nth</code> element of the iterator.\nReturns the position of the first element matching a …\nReturns bounds on the number of remaining elements in the …\nReturns an iterator which skips the first <code>n</code> elements.\nReturns an iterator which skips the first sequence of …\nReturns an iterator which only returns the first <code>n</code> …\nReturns an iterator which only returns the first sequence …")