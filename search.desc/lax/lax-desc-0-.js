searchState.loadedDescShard("lax", 0, "Linear Algebra eXtension (LAX)\nWraps <code>*geev</code> for general matrices\nAll <em>m</em> columns of <em>U</em> and all <em>n</em> rows of <em>V</em>ᵀ.\nRepresents the LU factorization of a tridiagonal matrix <code>A</code> …\nTrait for primitive types which implements LAPACK …\nResult of LeastSquares\nWraps <code>*gelsd</code>\nNo columns of <em>U</em> or rows of <em>V</em>ᵀ.\nResult of SVD\nWraps <code>*gesvd</code>\nThe first min(<em>m</em>,<em>n</em>) columns of <em>U</em> and the first min(<em>m</em>,<em>n</em>) …\nWraps <code>*trtri</code> and <code>*trtrs</code>\nRepresents a tridiagonal matrix as 3 one-dimensional …\nWraps <code>*gttrf</code>, <code>*gtcon</code> and <code>*gttrs</code>\nUpper/Lower specification for seveal usages\nSpecifies how many of the columns of <em>U</em> and rows of <em>V</em>ᵀ …\nA tridiagonal matrix which consists of\nBunch-Kaufman: wrapper of <code>*sytrf</code> and <code>*hetrf</code>\nCholesky: wrapper of <code>*potrf</code>\n(n) diagonal elements of matrix.\n(n-1) sub-diagonal elements of matrix.\n(n-1) super-diagonal elements of matrix.\n(n-2) elements of the second super-diagonal of U.\nCalculate Right eigenvalue\nWraps <code>*syev</code> for real and <code>*heev</code> for complex\nWraps <code>*sygv</code> for real and <code>*hegv</code> for complex\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExecute Householder reflection as the first step of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWrapper of <code>*potri</code>\nWrapper of <code>*sytri</code> and <code>*hetri</code>\nThe pivot indices that define the permutation matrix <code>P</code>.\nlayout of raw matrix\nMemory layout of matrices\nComputes the LU factorization of a general <code>m x n</code> matrix <code>a</code> …\nComputes the LU factorization of a tridiagonal <code>m x n</code> …\nReconstruct Q-matrix from Householder-reflectors\nExecute QR-decomposition at once\nThe rank of the input matrix A\nEstimates the the reciprocal of the condition number of …\ndiagonal values\nsingular values\nWrapper of <code>*potrs</code>\nWrapper of <code>*sytrs</code> and <code>*hetrs</code>\nCalculate singular value decomposition $ A = U \\Sigma V^T $\nUnitary matrix for destination space\nUnitary matrix for departure space\nContains the error value\nStrides of the array is not supported\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIn-place transpose of a square matrix by keeping F/C layout\nTranspose without changing memory representation\nOut-place transpose for general matrix")