searchState.loadedDescShard("target_features", 0, "Target features\nAArch64\nA target architecture.\nArm\nBPF\nThe target of the current build.\nA target feature.\nIterator returned by <code>Target::features</code>.\nHexagon\nMIPS\nPowerPC\nRISC-V\nTypes which can be SIMD vector elements.\nA target architecture with optional features.\nReturned by <code>Target::from_cpu</code> when the requested CPU can’…\nReturned by <code>Feature::new</code> when the requested feature can’…\nAnother target, which doesn’t have features\nWASM\nx86 and x86-64\nGet the architecture this feature is for.\nReturns the target architecture.\nGet a human-readable description of the feature.\nList of features available for each architecture.\nReturns an iterator over the features.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a target based on a particular CPU.\nCreate a new <code>Architecture</code> from its name.\nReturn all features which are implied by the existence of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the name of the feature.\nLook up a feature.\nCreate a target with no specified features.\nReturns a suggested number of elements for a SIMD vector …\nReturns whether the target supports the specified feature.\nReturns whether the target supports the specified feature.\nAdd a feature to the target.\nAdd a feature to the target.\naarch64 documentation\narm documentation\nbpf documentation\nhexagon documentation\nmips documentation\npowerpc documentation\nriscv documentation\nwasm documentation\nx86 documentation")