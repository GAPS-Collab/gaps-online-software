searchState.loadedDescShard("plotters_backend", 0, "The Plotters backend API crate. This is a part of …\nThe color type that is used by all the backend\nA coordinate in the pixel-based backend. The coordinate …\nThe style data for the backend drawing API\nThe trait that abstracts a style of a text.\nThe bold style\nThe drawing backend trait, which implements the low-level …\nA drawing backend error\nThe error produced by a drawing backend.\nThe error type reported by the backend\nA font rendering error\nThe error type of this text style implementation\nDescribes font family. This can be either a specific font …\nDescribes the font style. Such as Italic, Oblique, etc.\nSpecifying text transformations\nThe italic style\nThe system default monospace font\nA specific font family name\nNothing to transform\nThe normal style\nThe oblique style\nRotating the text 180 degree clockwise\nRotating the text 270 degree clockwise\nRotating the text 90 degree clockwise\nThe system default sans-serif font family\nThe system default serif font family\nMake a CSS compatible string for the font family name. …\nConvert the font style into a CSS compatible string which …\nBlit a bitmap on to the backend.\nGet the color of current style\nDraw a circle on the drawing backend\nDraw a line on the drawing backend\nDraw a path on the drawing backend\nDraw a pixel on the drawing backend\nDraw a rectangle on the drawing backend\nDraw a text on the drawing backend\nEnsure the backend is ready to draw\nEstimate the size of the horizontal text if rendered on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the dimension of the drawing backend in pixels\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFinalize the drawing step and present all the changes. …\nThe built-in rasterizers.\nGet the stroke width of current style\nGet the stroke width of current style\nText anchor attributes are used to properly position the …\nTransform the coordinate to perform the rotation\nCovert a path with &gt;1px stroke width into polygon.\nAnchor point is on the bottom of the text\nAnchor point is in the horizontal center of the text\nAnchor point is in the vertical center of the text\nThe horizontal position of the anchor point relative to …\nAnchor point is on the left side of the text\nThe text anchor position.\nAnchor point is on the right side of the text\nAnchor point is on the top of the text\nThe vertical position of the anchor point relative to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe horizontal position of the anchor point\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new text anchor position.\nThe vertical position of the anchor point")