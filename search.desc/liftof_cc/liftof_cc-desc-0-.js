searchState.loadedDescShard("liftof_cc", 0, "communicaton between liftof-scheduler and liftof-cc\nRun a full tof calibration - RBCalibration\nRegular run stop sequence\nGet the files in the queue and sort them by number\nRegular run start sequence\nTrigger a restart of liftof-cc and start a new run\nPrepare a new folder with the run id\nProduce a nicely formattable table with per RB information …\nRestart liftof-rb on RBs\nCopy a config file from the queue to the current and next …\nTrigger a general command on the Readoutboards remotly …\nA “verification” run describes an any trigger/track …\n! Limit the size of the evids the event builder is …\n! This should be rate dependent\n! How long to wait for paddles packets for each event in …\n! Average number of paddle packets per event\n! Expected maximum trigger rate\n! Limit the size of the internal paddle packet cache\nCommand dispatcher - handle incoming requests\nThe Heart of lfitof-cc. The event builder assembles all …\nGlobal data sink - a ‘funnel’ for all packets …\nReadoutboard communication. Get events and monitoring data\nDeal with incoming requests. Most will be statisfied by …\nEvents … assemble!\nManages “outgoing” 0MQ PUB socket and writing data to …\nReceive data from a readoutboard")