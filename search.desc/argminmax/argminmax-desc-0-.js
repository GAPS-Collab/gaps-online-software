searchState.loadedDescShard("argminmax", 0, "A crate for finding the index of the minimum and maximum …\nTrait for finding the minimum and maximum values in an …\nTrait for finding the minimum and maximum values in an …\nGet the index of the maximum value in the array.\nGet the index of the minimum value in the array.\nGet the index of the minimum and maximum values in the …\nThe strategy that is used to handle the data type.\nGet the index of the maximum value in the array.\nGet the index of the minimum value in the array.\nGet the index of the minimum and maximum values in the …\nScalar implementation of the argminmax functions.\nSIMD implementations of the argminmax functions.\nStrategy for floating point numbers - ignoring NaNs.\nStrategy for floating point numbers - returning NaNs.\nStrategy for signed and unsigned integers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType that implements the ScalarArgMinMax trait.\nA trait providing the scalar implementation of the …\nGet the index of the maximum value in the slice.\nGet the index of the minimum value in the slice.\nGet the index of the minimum and maximum values in the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAVX2 instruction set.\nNEON instruction set.\nA trait providing the SIMD implementation of the argminmax …\nSSE instruction set.\nGet the index of the maximum value in the slice.\nGet the index of the minimum value in the slice.\nGet the index of the minimum and maximum values in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")