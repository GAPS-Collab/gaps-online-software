searchState.loadedDescShard("planus", 0, "Planus – alternative flatbuffer implementation\nBuilder for serializing flatbuffers.\nContains the error value\nAn offset to a serialized value of type T inside a buffer …\nContains the success value\nInterface for getting a view into serialized data.\nA type alias for <code>Result</code> with a Planus error\nAn offset to a serialized union value of type T inside a …\nTrait used by generated code to read elements from vectors.\nTrait used by generated code to write elements to vectors.\nTrait used by generated code to serialize primitive types.\nTrait used by generated code to serialize primitive types …\nTrait used by generated code to serialize offsets to …\nTrait used by generated code to serialize optional …\nTrait used by generated code to serialize offsets to …\nTrait used by generated code to serialize offsets to …\nResets the builders internal state and clears the internal …\nError types for serialization/deserialization\nFinish writing the internal buffer and return a byte slice …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the internal buffer is empty.\nGets the length of the internal buffer in bytes.\nCreates a new Builder.\nTakes a slice assumed to be of this type and returns a …\nTypes for interacting with vectors in serialized data\nCreates a new builder with a specific internal capacity …\nThe main error type for Planus\nThe possible errors in planus when reading data from a …\nThe location of the error in both the generated code and …\nThe buffer was too short while validating a length field.\nThe offset was out of bounds.\nA string contained invalid utf-8.\nA vtable had an invalid length (too large, too small or …\nA string null terminator was missing.\nA required field was missing.\nInformation about an unrecognized enum tag.\nAn enum contained an unknown value. For forward …\nThe value of an unknown enum tag.\nAn union contained an unknown variant. For forward …\nOffset into the flatbuffers buffer where the error was …\nThe kind of error\nThe unknown tag.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe generated method where the error was encountered.\nThe location of the error\nThe location of the unknown tag.\nThe unknown tag.\nThe flatbuffers type where the error was encountered.\nHelper function that adds an error location to this error.\nHelper function that adds an error location to this error.\nThe length of the vtable.\nThe enum value that wasn’t recognized.\nThe utf-8 error triggered by the string.\nThe union tag that wasn’t recognized.\nA <code>Vec</code> like view into a serialized buffer that deserializes …\nAn iterator over the elements of a <code>Vector</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the element at the given index, or None if out of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the vector is empty.\nReturns an iterator over the vector.\nReturns the number of elements in the vector.\nCopies self into a new <code>Vec</code>.\nCopies self into a new <code>Vec</code>.")